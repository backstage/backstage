/*! For license information please see 73b2255f.3e8b57ce.js.LICENSE.txt */
"use strict";(self.webpackChunkbackstage_microsite=self.webpackChunkbackstage_microsite||[]).push([[836967],{282295:(n,e,i)=>{i.r(e),i.d(e,{assets:()=>c,contentTitle:()=>r,default:()=>u,frontMatter:()=>t,metadata:()=>s,toc:()=>l});var o=i(474848),a=i(28453);const t={id:"index",title:"Static Configuration in Backstage",description:"Documentation on Static Configuration in Backstage"},r=void 0,s={id:"conf/index",title:"Static Configuration in Backstage",description:"Documentation on Static Configuration in Backstage",source:"@site/versioned_docs/version-stable/conf/index.md",sourceDirName:"conf",slug:"/conf/",permalink:"/docs/conf/",draft:!1,unlisted:!1,editUrl:"https://github.com/backstage/backstage/edit/master/docs/conf/index.md",tags:[],version:"stable",frontMatter:{id:"index",title:"Static Configuration in Backstage",description:"Documentation on Static Configuration in Backstage"},sidebar:"docs",previous:{title:"Observability",permalink:"/docs/plugins/observability"},next:{title:"Reading Backstage Configuration",permalink:"/docs/conf/reading"}},c={},l=[{value:"Summary",id:"summary",level:2},{value:"Supplying Configuration",id:"supplying-configuration",level:2},{value:"Configuration Schema",id:"configuration-schema",level:2},{value:"Reading Configuration",id:"reading-configuration",level:2},{value:"Further Reading",id:"further-reading",level:2}];function d(n){const e={a:"a",code:"code",h2:"h2",li:"li",ol:"ol",p:"p",ul:"ul",...(0,a.R)(),...n.components};return(0,o.jsxs)(o.Fragment,{children:[(0,o.jsx)(e.h2,{id:"summary",children:"Summary"}),"\n",(0,o.jsx)(e.p,{children:"Backstage ships with a flexible configuration system that provides a simple way\nto configure Backstage apps and plugins for both local development and\nproduction deployments. It helps get you up and running fast while adapting\nBackstage for your specific environment. It also serves as a tool for plugin\nauthors to use to make it simple to pick up and install a plugin, while still\nallowing for customization."}),"\n",(0,o.jsx)(e.h2,{id:"supplying-configuration",children:"Supplying Configuration"}),"\n",(0,o.jsxs)(e.p,{children:["Configuration is stored in YAML files where the defaults are ",(0,o.jsx)(e.code,{children:"app-config.yaml"}),"\nand ",(0,o.jsx)(e.code,{children:"app-config.local.yaml"})," for local overrides. Additionally, it is possible\nto define environment based configuration files with ",(0,o.jsx)(e.code,{children:"BACKSTAGE_ENV"}),"\nenvironment variable, which will load ",(0,o.jsx)(e.code,{children:"app-config.<BACKSTAGE_ENV>.yaml"}),"."]}),"\n",(0,o.jsx)(e.p,{children:"Loading order of these files is as follows:"}),"\n",(0,o.jsxs)(e.ol,{children:["\n",(0,o.jsx)(e.li,{children:(0,o.jsx)(e.code,{children:"app-config.yaml"})}),"\n",(0,o.jsx)(e.li,{children:(0,o.jsx)(e.code,{children:"app-config.<BACKSTAGE_ENV>.yaml"})}),"\n",(0,o.jsx)(e.li,{children:(0,o.jsx)(e.code,{children:"app-config.local.yaml"})}),"\n",(0,o.jsx)(e.li,{children:(0,o.jsx)(e.code,{children:"app-config.<BACKSTAGE_ENV>.local.yaml"})}),"\n"]}),"\n",(0,o.jsxs)(e.p,{children:["Other sets of files can by loaded by passing ",(0,o.jsx)(e.code,{children:"--config <path>"})," flags.\nRead more about the configuration loading order in the\n",(0,o.jsx)(e.a,{href:"/docs/conf/writing#configuration-files",children:"Configuration Files"})," section."]}),"\n",(0,o.jsxs)(e.p,{children:["The configuration files themselves contain plain YAML, but with support for\nloading in data and secrets from various sources using for example\n",(0,o.jsx)(e.code,{children:"$env"})," and ",(0,o.jsx)(e.code,{children:"$file"})," keys."]}),"\n",(0,o.jsxs)(e.p,{children:["It is also possible to supply configuration through environment variables, for\nexample ",(0,o.jsx)(e.code,{children:"APP_CONFIG_app_baseUrl=https://staging.example.com"}),". However these\nshould be used sparingly, usually just for temporary overrides during\ndevelopment or small tweaks to be able to reuse deployment artifacts in\ndifferent environments."]}),"\n",(0,o.jsxs)(e.p,{children:["The configuration is shared between the frontend and backend, meaning that\nvalues that are common between the two only need to be defined once. Such as the\n",(0,o.jsx)(e.code,{children:"backend.baseUrl"}),"."]}),"\n",(0,o.jsxs)(e.p,{children:["For more details, see ",(0,o.jsx)(e.a,{href:"/docs/conf/writing",children:"Writing Configuration"}),"."]}),"\n",(0,o.jsx)(e.h2,{id:"configuration-schema",children:"Configuration Schema"}),"\n",(0,o.jsxs)(e.p,{children:["The configuration is validated using JSON Schema definitions. Each plugin and\npackage can provide pieces of the configuration schema, which are stitched\ntogether to form a complete schema during validation. The configuration schema\nis also used to select what configuration is available in the frontend using a\ncustom ",(0,o.jsx)(e.code,{children:"visibility"})," keyword, as configuration is by default only available in\nthe backend."]}),"\n",(0,o.jsxs)(e.p,{children:["You can validate your configuration against the schema using\n",(0,o.jsx)(e.code,{children:"backstage-cli config:check"}),", and define a schema for your own plugin either\nusing JSON Schema or TypeScript. For more information, see\n",(0,o.jsx)(e.a,{href:"/docs/conf/defining",children:"Defining Configuration"}),"."]}),"\n",(0,o.jsx)(e.h2,{id:"reading-configuration",children:"Reading Configuration"}),"\n",(0,o.jsxs)(e.p,{children:["As a plugin developer, you likely end up wanting to define configuration that\nyou want users of your plugin to supply, as well as reading that configuration\nin frontend and backend plugins. For more details, see\n",(0,o.jsx)(e.a,{href:"/docs/conf/reading",children:"Reading Configuration"})," and\n",(0,o.jsx)(e.a,{href:"/docs/conf/defining",children:"Defining Configuration"}),"."]}),"\n",(0,o.jsx)(e.h2,{id:"further-reading",children:"Further Reading"}),"\n",(0,o.jsx)(e.p,{children:"More details are provided in dedicated sections of the documentation."}),"\n",(0,o.jsxs)(e.ul,{children:["\n",(0,o.jsxs)(e.li,{children:[(0,o.jsx)(e.a,{href:"/docs/conf/reading",children:"Reading Configuration"}),": How to read configuration in your\nplugin."]}),"\n",(0,o.jsxs)(e.li,{children:[(0,o.jsx)(e.a,{href:"/docs/conf/writing",children:"Writing Configuration"}),": How to write configuration for your\nBackstage deployment."]}),"\n",(0,o.jsxs)(e.li,{children:[(0,o.jsx)(e.a,{href:"/docs/conf/defining",children:"Defining Configuration"}),": How to define a configuration schema\nfor users of your plugin or package."]}),"\n"]})]})}function u(n={}){const{wrapper:e}={...(0,a.R)(),...n.components};return e?(0,o.jsx)(e,{...n,children:(0,o.jsx)(d,{...n})}):d(n)}},221020:(n,e,i)=>{var o=i(296540),a=Symbol.for("react.element"),t=Symbol.for("react.fragment"),r=Object.prototype.hasOwnProperty,s=o.__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED.ReactCurrentOwner,c={key:!0,ref:!0,__self:!0,__source:!0};function l(n,e,i){var o,t={},l=null,d=null;for(o in void 0!==i&&(l=""+i),void 0!==e.key&&(l=""+e.key),void 0!==e.ref&&(d=e.ref),e)r.call(e,o)&&!c.hasOwnProperty(o)&&(t[o]=e[o]);if(n&&n.defaultProps)for(o in e=n.defaultProps)void 0===t[o]&&(t[o]=e[o]);return{$$typeof:a,type:n,key:l,ref:d,props:t,_owner:s.current}}e.Fragment=t,e.jsx=l,e.jsxs=l},474848:(n,e,i)=>{n.exports=i(221020)},28453:(n,e,i)=>{i.d(e,{R:()=>r,x:()=>s});var o=i(296540);const a={},t=o.createContext(a);function r(n){const e=o.useContext(t);return o.useMemo((function(){return"function"==typeof n?n(e):{...e,...n}}),[e,n])}function s(n){let e;return e=n.disableParentContext?"function"==typeof n.components?n.components(a):n.components||a:r(n.components),o.createElement(t.Provider,{value:e},n.children)}}}]);