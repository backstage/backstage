/*! For license information please see 7ce076f9.108d2016.js.LICENSE.txt */
"use strict";(self.webpackChunkbackstage_microsite=self.webpackChunkbackstage_microsite||[]).push([[311078],{834454:(e,n,i)=>{i.r(n),i.d(n,{assets:()=>c,contentTitle:()=>a,default:()=>p,frontMatter:()=>o,metadata:()=>r,toc:()=>l});var t=i(474848),s=i(28453);const o={id:"configuring-extensions",title:"Configuring Extensions in the App",sidebar_label:"Configuring Extensions",description:"Documentation for how to configure extensions in a Backstage app"},a=void 0,r={id:"frontend-system/building-apps/configuring-extensions",title:"Configuring Extensions in the App",description:"Documentation for how to configure extensions in a Backstage app",source:"@site/../docs/frontend-system/building-apps/02-configuring-extensions.md",sourceDirName:"frontend-system/building-apps",slug:"/frontend-system/building-apps/configuring-extensions",permalink:"/docs/next/frontend-system/building-apps/configuring-extensions",draft:!1,unlisted:!1,editUrl:"https://github.com/backstage/backstage/edit/master/docs/frontend-system/building-apps/02-configuring-extensions.md",tags:[],version:"current",sidebarPosition:2,frontMatter:{id:"configuring-extensions",title:"Configuring Extensions in the App",sidebar_label:"Configuring Extensions",description:"Documentation for how to configure extensions in a Backstage app"},sidebar:"docs",previous:{title:"Overview",permalink:"/docs/next/frontend-system/building-apps/index"},next:{title:"Built-in extensions",permalink:"/docs/next/frontend-system/building-apps/built-in-extensions"}},c={},l=[{value:"Extension Configuration Schema",id:"extension-configuration-schema",level:2}];function d(e){const n={a:"a",code:"code",h2:"h2",p:"p",pre:"pre",...(0,s.R)(),...e.components};return(0,t.jsxs)(t.Fragment,{children:[(0,t.jsxs)(n.p,{children:["All extensions in a Backstage app can be configured through static configuration. This configuration is all done under the ",(0,t.jsx)(n.code,{children:"app.extensions"})," configuration key. For more general information on how to write configuration for Backstage, see the section on ",(0,t.jsx)(n.a,{href:"/docs/next/conf/writing",children:"writing configuration"}),"."]}),"\n",(0,t.jsx)(n.h2,{id:"extension-configuration-schema",children:"Extension Configuration Schema"}),"\n",(0,t.jsxs)(n.p,{children:["This section focuses on the format of the ",(0,t.jsx)(n.code,{children:"app.extensions"})," configuration and the various shorthands that are available."]}),"\n",(0,t.jsx)(n.p,{children:"The most complete and verbose format for configuring an individual extensions is as follows:"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-yaml",children:"app:\n  extensions:\n    - <id>:\n        attachTo:\n          id: <parent-id>\n          input: <input-name>\n        disabled: <true/false>\n        config: <extension-specific-config->\n"})}),"\n",(0,t.jsxs)(n.p,{children:["All of the top-level fields are optional: ",(0,t.jsx)(n.code,{children:"attachTo"}),", ",(0,t.jsx)(n.code,{children:"disabled"}),", and ",(0,t.jsx)(n.code,{children:"config"}),". Every extension implementation must provide defaults for all of these fields that will be used if they are not provided in the configuration."]}),"\n",(0,t.jsxs)(n.p,{children:["Note that ",(0,t.jsx)(n.code,{children:"app.extensions"})," is always an array rather than an object. For example, the following is invalid:"]}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-yaml",metastring:'title="INVALID"',children:"app:\n  extensions:\n    <id>: # Invalid, this should be an array item, `app.extensions` is now an object\n      config: ...\n"})}),"\n",(0,t.jsx)(n.p,{children:"In addition to this schema, there are a number of shorthands available:"}),"\n",(0,t.jsxs)(n.p,{children:["Rather than a full object, you can specify just the ID of the extension as a string. This is equivalent to setting ",(0,t.jsx)(n.code,{children:"disabled"})," to ",(0,t.jsx)(n.code,{children:"false"}),":"]}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-yaml",children:"app:\n  extensions:\n    - \u2018<id>\u2019\n"})}),"\n",(0,t.jsx)(n.p,{children:"You can enable/disable individual extension by ID, in this case the value is a boolean:"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-yaml",children:"app:\n  extensions:\n    - <id>: <true/false>\n"})})]})}function p(e={}){const{wrapper:n}={...(0,s.R)(),...e.components};return n?(0,t.jsx)(n,{...e,children:(0,t.jsx)(d,{...e})}):d(e)}},221020:(e,n,i)=>{var t=i(296540),s=Symbol.for("react.element"),o=Symbol.for("react.fragment"),a=Object.prototype.hasOwnProperty,r=t.__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED.ReactCurrentOwner,c={key:!0,ref:!0,__self:!0,__source:!0};function l(e,n,i){var t,o={},l=null,d=null;for(t in void 0!==i&&(l=""+i),void 0!==n.key&&(l=""+n.key),void 0!==n.ref&&(d=n.ref),n)a.call(n,t)&&!c.hasOwnProperty(t)&&(o[t]=n[t]);if(e&&e.defaultProps)for(t in n=e.defaultProps)void 0===o[t]&&(o[t]=n[t]);return{$$typeof:s,type:e,key:l,ref:d,props:o,_owner:r.current}}n.Fragment=o,n.jsx=l,n.jsxs=l},474848:(e,n,i)=>{e.exports=i(221020)},28453:(e,n,i)=>{i.d(n,{R:()=>a,x:()=>r});var t=i(296540);const s={},o=t.createContext(s);function a(e){const n=t.useContext(o);return t.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function r(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(s):e.components||s:a(e.components),t.createElement(o.Provider,{value:n},e.children)}}}]);