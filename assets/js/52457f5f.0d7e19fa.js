/*! For license information please see 52457f5f.0d7e19fa.js.LICENSE.txt */
"use strict";(self.webpackChunkbackstage_microsite=self.webpackChunkbackstage_microsite||[]).push([[11261],{682648:(e,n,i)=>{i.r(n),i.d(n,{assets:()=>a,contentTitle:()=>o,default:()=>l,frontMatter:()=>s,metadata:()=>d,toc:()=>u});var r=i(474848),t=i(28453);const s={id:"plugin-scaffolder-backend-module-github.createpublishgithubaction",title:"createPublishGithubAction()",description:"API reference for createPublishGithubAction()"},o=void 0,d={id:"reference/plugin-scaffolder-backend-module-github.createpublishgithubaction",title:"createPublishGithubAction()",description:"API reference for createPublishGithubAction()",source:"@site/../docs/reference/plugin-scaffolder-backend-module-github.createpublishgithubaction.md",sourceDirName:"reference",slug:"/reference/plugin-scaffolder-backend-module-github.createpublishgithubaction",permalink:"/docs/next/reference/plugin-scaffolder-backend-module-github.createpublishgithubaction",draft:!1,unlisted:!1,editUrl:"https://github.com/backstage/backstage/edit/master/docs/reference/plugin-scaffolder-backend-module-github.createpublishgithubaction.md",tags:[],version:"current",frontMatter:{id:"plugin-scaffolder-backend-module-github.createpublishgithubaction",title:"createPublishGithubAction()",description:"API reference for createPublishGithubAction()"}},a={},u=[{value:"Parameters",id:"parameters",level:2}];function c(e){const n={a:"a",code:"code",h2:"h2",p:"p",pre:"pre",strong:"strong",table:"table",tbody:"tbody",td:"td",th:"th",thead:"thead",tr:"tr",...(0,t.R)(),...e.components};return(0,r.jsxs)(r.Fragment,{children:[(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.a,{href:"/docs/next/reference/",children:"Home"})," > ",(0,r.jsx)(n.a,{href:"/docs/next/reference/plugin-scaffolder-backend-module-github",children:(0,r.jsx)(n.code,{children:"@backstage/plugin-scaffolder-backend-module-github"})})," > ",(0,r.jsx)(n.a,{href:"/docs/next/reference/plugin-scaffolder-backend-module-github.createpublishgithubaction",children:(0,r.jsx)(n.code,{children:"createPublishGithubAction"})})]}),"\n",(0,r.jsx)(n.p,{children:"Creates a new action that initializes a git repository of the content in the workspace and publishes it to GitHub."}),"\n",(0,r.jsx)(n.p,{children:(0,r.jsx)(n.strong,{children:"Signature:"})}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-typescript",children:'function createPublishGithubAction(options: {\n    integrations: ScmIntegrationRegistry;\n    config: Config;\n    githubCredentialsProvider?: GithubCredentialsProvider;\n}): import("@backstage/plugin-scaffolder-node").TemplateAction<{\n    repoUrl: string;\n    description?: string | undefined;\n    homepage?: string | undefined;\n    access?: string | undefined;\n    bypassPullRequestAllowances?: {\n        apps?: string[] | undefined;\n        teams?: string[] | undefined;\n        users?: string[] | undefined;\n    } | undefined;\n    requiredApprovingReviewCount?: number | undefined;\n    restrictions?: {\n        teams: string[];\n        users: string[];\n        apps?: string[] | undefined;\n    } | undefined;\n    requireCodeOwnerReviews?: boolean | undefined;\n    dismissStaleReviews?: boolean | undefined;\n    requiredStatusCheckContexts?: string[] | undefined;\n    requireBranchesToBeUpToDate?: boolean | undefined;\n    requiredConversationResolution?: boolean | undefined;\n    requireLastPushApproval?: boolean | undefined;\n    repoVisibility?: "internal" | "private" | "public" | undefined;\n    defaultBranch?: string | undefined;\n    protectDefaultBranch?: boolean | undefined;\n    protectEnforceAdmins?: boolean | undefined;\n    deleteBranchOnMerge?: boolean | undefined;\n    gitCommitMessage?: string | undefined;\n    gitAuthorName?: string | undefined;\n    gitAuthorEmail?: string | undefined;\n    allowMergeCommit?: boolean | undefined;\n    allowSquashMerge?: boolean | undefined;\n    squashMergeCommitTitle?: "PR_TITLE" | "COMMIT_OR_PR_TITLE" | undefined;\n    squashMergeCommitMessage?: "PR_BODY" | "COMMIT_MESSAGES" | "BLANK" | undefined;\n    allowRebaseMerge?: boolean | undefined;\n    allowAutoMerge?: boolean | undefined;\n    allowUpdateBranch?: boolean | undefined;\n    sourcePath?: string | undefined;\n    collaborators?: ({\n        user: string;\n        access: string;\n    } | {\n        team: string;\n        access: string;\n    })[] | undefined;\n    hasProjects?: boolean | undefined;\n    hasWiki?: boolean | undefined;\n    hasIssues?: boolean | undefined;\n    token?: string | undefined;\n    topics?: string[] | undefined;\n    repoVariables?: Record<string, string> | undefined;\n    secrets?: Record<string, string> | undefined;\n    oidcCustomization?: {\n        useDefault: boolean;\n        includeClaimKeys?: string[] | undefined;\n    } | undefined;\n    requiredCommitSigning?: boolean | undefined;\n    requiredLinearHistory?: boolean | undefined;\n    customProperties?: Record<string, string | string[]> | undefined;\n    subscribe?: boolean | undefined;\n}, {\n    remoteUrl: string;\n    repoContentsUrl: string;\n    commitHash: string;\n}, "v2">;\n'})}),"\n",(0,r.jsx)(n.h2,{id:"parameters",children:"Parameters"}),"\n",(0,r.jsxs)(n.table,{children:[(0,r.jsx)(n.thead,{children:(0,r.jsxs)(n.tr,{children:[(0,r.jsxs)(n.th,{children:["\n",(0,r.jsx)(n.p,{children:"Parameter"}),"\n"]}),(0,r.jsxs)(n.th,{children:["\n",(0,r.jsx)(n.p,{children:"Type"}),"\n"]}),(0,r.jsxs)(n.th,{children:["\n",(0,r.jsx)(n.p,{children:"Description"}),"\n"]})]})}),(0,r.jsx)(n.tbody,{children:(0,r.jsxs)(n.tr,{children:[(0,r.jsxs)(n.td,{children:["\n",(0,r.jsx)(n.p,{children:"options"}),"\n"]}),(0,r.jsxs)(n.td,{children:["\n",(0,r.jsxs)(n.p,{children:["{ integrations: ",(0,r.jsx)(n.a,{href:"/docs/next/reference/integration.scmintegrationregistry",children:"ScmIntegrationRegistry"}),"; config: ",(0,r.jsx)(n.a,{href:"/docs/next/reference/config.config",children:"Config"}),"; githubCredentialsProvider?: ",(0,r.jsx)(n.a,{href:"/docs/next/reference/integration.githubcredentialsprovider",children:"GithubCredentialsProvider"}),"; }"]}),"\n"]}),(0,r.jsx)(n.td,{children:"\n"})]})})]}),"\n**Returns:**\n",(0,r.jsxs)(n.p,{children:['import("@backstage/plugin-scaffolder-node").',(0,r.jsx)(n.a,{href:"/docs/next/reference/plugin-scaffolder-node.templateaction",children:"TemplateAction"}),'<{ repoUrl: string; description?: string | undefined; homepage?: string | undefined; access?: string | undefined; bypassPullRequestAllowances?: { apps?: string[] | undefined; teams?: string[] | undefined; users?: string[] | undefined; } | undefined; requiredApprovingReviewCount?: number | undefined; restrictions?: { teams: string[]; users: string[]; apps?: string[] | undefined; } | undefined; requireCodeOwnerReviews?: boolean | undefined; dismissStaleReviews?: boolean | undefined; requiredStatusCheckContexts?: string[] | undefined; requireBranchesToBeUpToDate?: boolean | undefined; requiredConversationResolution?: boolean | undefined; requireLastPushApproval?: boolean | undefined; repoVisibility?: "internal" | "private" | "public" | undefined; defaultBranch?: string | undefined; protectDefaultBranch?: boolean | undefined; protectEnforceAdmins?: boolean | undefined; deleteBranchOnMerge?: boolean | undefined; gitCommitMessage?: string | undefined; gitAuthorName?: string | undefined; gitAuthorEmail?: string | undefined; allowMergeCommit?: boolean | undefined; allowSquashMerge?: boolean | undefined; squashMergeCommitTitle?: "PR_TITLE" | "COMMIT_OR_PR_TITLE" | undefined; squashMergeCommitMessage?: "PR_BODY" | "COMMIT_MESSAGES" | "BLANK" | undefined; allowRebaseMerge?: boolean | undefined; allowAutoMerge?: boolean | undefined; allowUpdateBranch?: boolean | undefined; sourcePath?: string | undefined; collaborators?: ({ user: string; access: string; } | { team: string; access: string; })[] | undefined; hasProjects?: boolean | undefined; hasWiki?: boolean | undefined; hasIssues?: boolean | undefined; token?: string | undefined; topics?: string[] | undefined; repoVariables?: Record<string, string> | undefined; secrets?: Record<string, string> | undefined; oidcCustomization?: { useDefault: boolean; includeClaimKeys?: string[] | undefined; } | undefined; requiredCommitSigning?: boolean | undefined; requiredLinearHistory?: boolean | undefined; customProperties?: Record<string, string | string[]> | undefined; subscribe?: boolean | undefined; }, { remoteUrl: string; repoContentsUrl: string; commitHash: string; }, "v2">']})]})}function l(e={}){const{wrapper:n}={...(0,t.R)(),...e.components};return n?(0,r.jsx)(n,{...e,children:(0,r.jsx)(c,{...e})}):c(e)}},221020:(e,n,i)=>{var r=i(296540),t=Symbol.for("react.element"),s=Symbol.for("react.fragment"),o=Object.prototype.hasOwnProperty,d=r.__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED.ReactCurrentOwner,a={key:!0,ref:!0,__self:!0,__source:!0};function u(e,n,i){var r,s={},u=null,c=null;for(r in void 0!==i&&(u=""+i),void 0!==n.key&&(u=""+n.key),void 0!==n.ref&&(c=n.ref),n)o.call(n,r)&&!a.hasOwnProperty(r)&&(s[r]=n[r]);if(e&&e.defaultProps)for(r in n=e.defaultProps)void 0===s[r]&&(s[r]=n[r]);return{$$typeof:t,type:e,key:u,ref:c,props:s,_owner:d.current}}n.Fragment=s,n.jsx=u,n.jsxs=u},474848:(e,n,i)=>{e.exports=i(221020)},28453:(e,n,i)=>{i.d(n,{R:()=>o,x:()=>d});var r=i(296540);const t={},s=r.createContext(t);function o(e){const n=r.useContext(s);return r.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function d(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(t):e.components||t:o(e.components),r.createElement(s.Provider,{value:n},e.children)}}}]);