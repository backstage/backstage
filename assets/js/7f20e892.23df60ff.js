/*! For license information please see 7f20e892.23df60ff.js.LICENSE.txt */
"use strict";(self.webpackChunkbackstage_microsite=self.webpackChunkbackstage_microsite||[]).push([[112088],{9928:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>i,contentTitle:()=>c,default:()=>d,frontMatter:()=>s,metadata:()=>a,toc:()=>h});var o=n(474848),r=n(28453);const s={id:"root-health",title:"Root Health Service",sidebar_label:"Root Health",description:"Documentation for the Health service"},c=void 0,a={id:"backend-system/core-services/root-health",title:"Root Health Service",description:"Documentation for the Health service",source:"@site/../docs/backend-system/core-services/root-health.md",sourceDirName:"backend-system/core-services",slug:"/backend-system/core-services/root-health",permalink:"/docs/next/backend-system/core-services/root-health",draft:!1,unlisted:!1,editUrl:"https://github.com/backstage/backstage/edit/master/docs/backend-system/core-services/root-health.md",tags:[],version:"current",frontMatter:{id:"root-health",title:"Root Health Service",sidebar_label:"Root Health",description:"Documentation for the Health service"},sidebar:"docs",previous:{title:"Root Config",permalink:"/docs/next/backend-system/core-services/root-config"},next:{title:"Root Http Router",permalink:"/docs/next/backend-system/core-services/root-http-router"}},i={},h=[{value:"Configuring the service",id:"configuring-the-service",level:2},{value:"Custom headers in health check responses",id:"custom-headers-in-health-check-responses",level:3}];function l(e){const t={a:"a",code:"code",h2:"h2",h3:"h3",p:"p",pre:"pre",...(0,r.R)(),...e.components};return(0,o.jsxs)(o.Fragment,{children:[(0,o.jsxs)(t.p,{children:["The Root Health service provides some health check endpoints for the backend. By default, the ",(0,o.jsx)(t.code,{children:"rootHttpRouter"})," exposes a ",(0,o.jsx)(t.code,{children:"/.backstage/health/v1/readiness"})," and ",(0,o.jsx)(t.code,{children:"/.backstage/health/v1/liveness"})," endpoints, which return a JSON object with the status of the backend services according the implementation of the Root Health Service."]}),"\n",(0,o.jsx)(t.h2,{id:"configuring-the-service",children:"Configuring the service"}),"\n",(0,o.jsx)(t.p,{children:"The following example shows how you can override the root health service implementation."}),"\n",(0,o.jsx)(t.pre,{children:(0,o.jsx)(t.code,{className:"language-ts",children:"import {\n  RootHealthService,\n  coreServices,\n  createServiceFactory,\n} from '@backstage/backend-plugin-api';\n\nconst backend = createBackend();\n\nclass MyRootHealthService implements RootHealthService {\n  async getLiveness() {\n    // provide your own implementation\n    return { status: 200, payload: { status: 'ok' } };\n  }\n\n  async getReadiness() {\n    // provide your own implementation\n    return { status: 200, payload: { status: 'ok' } };\n  }\n}\n\nbackend.add(\n  createServiceFactory({\n    service: coreServices.rootHealth,\n    deps: {},\n    async factory({}) {\n      return new MyRootHealthService();\n    },\n  }),\n);\n"})}),"\n",(0,o.jsx)(t.h3,{id:"custom-headers-in-health-check-responses",children:"Custom headers in health check responses"}),"\n",(0,o.jsxs)(t.p,{children:["While not implemented directly in the root health service, the default implementation of the ",(0,o.jsx)(t.a,{href:"/docs/next/backend-system/core-services/root-http-router",children:"RootHttpRouter"})," service includes a configuration option to set additional headers to include in health check responses. For example, you can add a ",(0,o.jsx)(t.code,{children:"service-name"})," header using the following configuration:"]}),"\n",(0,o.jsx)(t.pre,{children:(0,o.jsx)(t.code,{className:"language-yaml",children:"backend:\n  health:\n    headers:\n      service-name: my-service\n"})}),"\n",(0,o.jsx)(t.p,{children:"It can be a good idea to set a header for your health check responses that\nuniquely identifies your service in a multi-service environment. This ensures\nthat the health check that is configured for your service is actually hitting\nyour service and not another."}),"\n",(0,o.jsxs)(t.p,{children:["For example, if using Envoy you can use the ",(0,o.jsx)(t.a,{href:"https://www.envoyproxy.io/docs/envoy/latest/intro/arch_overview/upstream/health_checking#health-check-identity",children:(0,o.jsx)(t.code,{children:"service_name_matcher"})})," configuration and\nset the ",(0,o.jsx)(t.code,{children:"x-envoy-upstream-healthchecked-cluster"})," header to a matching value. For example:"]}),"\n",(0,o.jsx)(t.pre,{children:(0,o.jsx)(t.code,{className:"language-yaml",children:"backend:\n  health:\n    headers:\n      x-envoy-upstream-healthchecked-cluster: my-service\n"})})]})}function d(e={}){const{wrapper:t}={...(0,r.R)(),...e.components};return t?(0,o.jsx)(t,{...e,children:(0,o.jsx)(l,{...e})}):l(e)}},221020:(e,t,n)=>{var o=n(296540),r=Symbol.for("react.element"),s=Symbol.for("react.fragment"),c=Object.prototype.hasOwnProperty,a=o.__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED.ReactCurrentOwner,i={key:!0,ref:!0,__self:!0,__source:!0};function h(e,t,n){var o,s={},h=null,l=null;for(o in void 0!==n&&(h=""+n),void 0!==t.key&&(h=""+t.key),void 0!==t.ref&&(l=t.ref),t)c.call(t,o)&&!i.hasOwnProperty(o)&&(s[o]=t[o]);if(e&&e.defaultProps)for(o in t=e.defaultProps)void 0===s[o]&&(s[o]=t[o]);return{$$typeof:r,type:e,key:h,ref:l,props:s,_owner:a.current}}t.Fragment=s,t.jsx=h,t.jsxs=h},474848:(e,t,n)=>{e.exports=n(221020)},28453:(e,t,n)=>{n.d(t,{R:()=>c,x:()=>a});var o=n(296540);const r={},s=o.createContext(r);function c(e){const t=o.useContext(s);return o.useMemo((function(){return"function"==typeof e?e(t):{...t,...e}}),[t,e])}function a(e){let t;return t=e.disableParentContext?"function"==typeof e.components?e.components(r):e.components||r:c(e.components),o.createElement(s.Provider,{value:t},e.children)}}}]);