/*! For license information please see a5cf8878.b1150d83.js.LICENSE.txt */
"use strict";(self.webpackChunkbackstage_microsite=self.webpackChunkbackstage_microsite||[]).push([[663335],{774088:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>r,contentTitle:()=>c,default:()=>h,frontMatter:()=>s,metadata:()=>a,toc:()=>l});var i=n(474848),o=n(28453);const s={id:"writing-custom-actions",title:"Writing Custom Actions",description:"How to write your own actions"},c=void 0,a={id:"features/software-templates/writing-custom-actions",title:"Writing Custom Actions",description:"How to write your own actions",source:"@site/versioned_docs/version-stable/features/software-templates/writing-custom-actions.md",sourceDirName:"features/software-templates",slug:"/features/software-templates/writing-custom-actions",permalink:"/docs/features/software-templates/writing-custom-actions",draft:!1,unlisted:!1,editUrl:"https://github.com/backstage/backstage/edit/master/docs/features/software-templates/writing-custom-actions.md",tags:[],version:"stable",frontMatter:{id:"writing-custom-actions",title:"Writing Custom Actions",description:"How to write your own actions"},sidebar:"docs",previous:{title:"Builtin actions",permalink:"/docs/features/software-templates/builtin-actions"},next:{title:"Writing Tests For Actions",permalink:"/docs/features/software-templates/writing-tests-for-actions"}},r={},l=[{value:"Streamlining Custom Action Creation with Backstage CLI",id:"streamlining-custom-action-creation-with-backstage-cli",level:2},{value:"Writing your Custom Action",id:"writing-your-custom-action",level:2},{value:"Naming Conventions",id:"naming-conventions",level:3},{value:"Adding a TemplateExample",id:"adding-a-templateexample",level:3},{value:"Define TemplateExamples",id:"define-templateexamples",level:4},{value:"Register TemplateExample with your custom action",id:"register-templateexample-with-your-custom-action",level:4},{value:"Test TemplateAction examples",id:"test-templateaction-examples",level:4},{value:"The context object",id:"the-context-object",level:3},{value:"Registering Custom Actions",id:"registering-custom-actions",level:2},{value:"Using Checkpoints in Custom Actions (Experimental)",id:"using-checkpoints-in-custom-actions-experimental",level:3},{value:"Contributed Community Actions",id:"contributed-community-actions",level:2}];function d(e){const t={a:"a",admonition:"admonition",code:"code",em:"em",h2:"h2",h3:"h3",h4:"h4",li:"li",p:"p",pre:"pre",strong:"strong",ul:"ul",...(0,o.R)(),...e.components};return(0,i.jsxs)(i.Fragment,{children:[(0,i.jsxs)(t.p,{children:["If you want to extend the functionality of the Scaffolder, you can do so\nby writing custom actions which can be used alongside our\n",(0,i.jsx)(t.a,{href:"/docs/features/software-templates/builtin-actions",children:"built-in actions"}),"."]}),"\n",(0,i.jsx)(t.admonition,{title:"Note",type:"note",children:(0,i.jsxs)(t.p,{children:["When adding custom actions, the actions array will ",(0,i.jsx)(t.strong,{children:"replace the\nbuilt-in actions too"}),". Meaning, you will no longer be able to use them.\nIf you want to continue using the builtin actions, include them in the ",(0,i.jsx)(t.code,{children:"actions"}),"\narray when registering your custom actions, as seen below."]})}),"\n",(0,i.jsx)(t.h2,{id:"streamlining-custom-action-creation-with-backstage-cli",children:"Streamlining Custom Action Creation with Backstage CLI"}),"\n",(0,i.jsx)(t.p,{children:"The creation of custom actions in Backstage has never been easier thanks to the Backstage CLI. This tool streamlines the\nsetup process, allowing you to focus on your actions' unique functionality."}),"\n",(0,i.jsxs)(t.p,{children:["Start by using the ",(0,i.jsx)(t.code,{children:"yarn backstage-cli new"})," command to generate a scaffolder module. This command sets up the necessary\nboilerplate code, providing a smooth start:"]}),"\n",(0,i.jsx)(t.pre,{children:(0,i.jsx)(t.code,{className:"language-sh",children:"$ yarn backstage-cli new\n? What do you want to create?\n  plugin-common - A new isomorphic common plugin package\n  plugin-node - A new Node.js library plugin package\n  plugin-react - A new web library plugin package\n> scaffolder-module - An module exporting custom actions for @backstage/plugin-scaffolder-backend\n"})}),"\n",(0,i.jsx)(t.p,{children:"When prompted, select the option to generate a scaffolder module. This creates a solid foundation for your custom\naction. Enter the name of the module you wish to create, and the CLI will generate the required files and directory\nstructure."}),"\n",(0,i.jsx)(t.h2,{id:"writing-your-custom-action",children:"Writing your Custom Action"}),"\n",(0,i.jsx)(t.p,{children:"After running the command, the CLI will create a new directory with your new scaffolder module. This directory will be\nthe working directory for creating the custom action. It will contain all the necessary files and boilerplate code to\nget started."}),"\n",(0,i.jsxs)(t.p,{children:["Let's create a simple action that adds a new file and some contents that are passed as ",(0,i.jsx)(t.code,{children:"input"})," to the function. Within\nthe generated directory, locate the file at ",(0,i.jsx)(t.code,{children:"src/actions/example/example.ts"}),". Feel free to rename this file along with\nits generated unit test. We will replace the existing placeholder code with our custom action code as follows:"]}),"\n",(0,i.jsx)(t.pre,{children:(0,i.jsx)(t.code,{className:"language-ts",metastring:'title="With Zod"',children:"import { resolveSafeChildPath } from '@backstage/backend-plugin-api';\nimport { createTemplateAction } from '@backstage/plugin-scaffolder-node';\nimport fs from 'fs-extra';\nimport { type z } from 'zod';\n\nexport const createNewFileAction = () => {\n  return createTemplateAction({\n    id: 'acme:file:create',\n    description: 'Create an Acme file.',\n    schema: {\n      input: {\n        contents: z => z.string({ description: 'The contents of the file' }),\n        filename: z =>\n          z.string({\n            description: 'The filename of the file that will be created',\n          }),\n      },\n    },\n\n    async handler(ctx) {\n      await fs.outputFile(\n        resolveSafeChildPath(ctx.workspacePath, ctx.input.filename),\n        ctx.input.contents,\n      );\n    },\n  });\n};\n"})}),"\n",(0,i.jsxs)(t.p,{children:["So let's break this down. The ",(0,i.jsx)(t.code,{children:"createNewFileAction"})," is a function that returns a\n",(0,i.jsx)(t.code,{children:"createTemplateAction"}),", and it's a good place to pass in dependencies which\nclose over the ",(0,i.jsx)(t.code,{children:"TemplateAction"}),". Take a look at our\n",(0,i.jsx)(t.a,{href:"https://github.com/backstage/backstage/blob/master/plugins/scaffolder-backend/src/scaffolder/actions/builtin",children:"built-in actions"}),"\nfor reference."]}),"\n",(0,i.jsxs)(t.p,{children:["The ",(0,i.jsx)(t.code,{children:"createTemplateAction"})," takes an object which specifies the following:"]}),"\n",(0,i.jsxs)(t.ul,{children:["\n",(0,i.jsxs)(t.li,{children:[(0,i.jsx)(t.code,{children:"id"})," - A ",(0,i.jsx)(t.strong,{children:"unique"})," ID for your custom action. We encourage you to namespace these\nin some way so that they won't collide with future built-in actions that we\nmay ship with the ",(0,i.jsx)(t.code,{children:"scaffolder-backend"})," plugin."]}),"\n",(0,i.jsxs)(t.li,{children:[(0,i.jsx)(t.code,{children:"description"})," - An optional field to describe the purpose of the action. This will populate in the ",(0,i.jsx)(t.code,{children:"/create/actions"}),"\nendpoint."]}),"\n",(0,i.jsxs)(t.li,{children:[(0,i.jsx)(t.code,{children:"schema.input"})," - A ",(0,i.jsx)(t.code,{children:"zod"})," or JSON schema object for input values to your function"]}),"\n",(0,i.jsxs)(t.li,{children:[(0,i.jsx)(t.code,{children:"schema.output"})," - A ",(0,i.jsx)(t.code,{children:"zod"})," or JSON schema object for values which are output from the\nfunction using ",(0,i.jsx)(t.code,{children:"ctx.output"})]}),"\n",(0,i.jsxs)(t.li,{children:[(0,i.jsx)(t.code,{children:"handler"})," - the actual code which is run as part of the action, with a context"]}),"\n"]}),"\n",(0,i.jsx)(t.h3,{id:"naming-conventions",children:"Naming Conventions"}),"\n",(0,i.jsxs)(t.p,{children:["Try to keep names consistent for both your own custom actions, and any actions contributed to open source. We've found\nthat a separation of ",(0,i.jsx)(t.code,{children:":"})," and using a verb as the last part of the name works well.\nWe follow ",(0,i.jsx)(t.code,{children:"provider:entity:verb"})," or as close to this as possible for our built-in actions. For example,\n",(0,i.jsx)(t.code,{children:"github:actions:create"})," or ",(0,i.jsx)(t.code,{children:"github:repo:create"}),"."]}),"\n",(0,i.jsxs)(t.p,{children:["Also feel free to use your company name to namespace them if you prefer too, for example ",(0,i.jsx)(t.code,{children:"acme:file:create"})," like above."]}),"\n",(0,i.jsxs)(t.p,{children:["Prefer to use ",(0,i.jsx)(t.code,{children:"camelCase"})," over ",(0,i.jsx)(t.code,{children:"snake_case"})," or ",(0,i.jsx)(t.code,{children:"kebab-case"})," for these actions if possible, which leads to better reading\nand writing of template entity definitions."]}),"\n",(0,i.jsx)(t.h3,{id:"adding-a-templateexample",children:"Adding a TemplateExample"}),"\n",(0,i.jsxs)(t.p,{children:["A TemplateExample is a way to document different ways that your custom action can be used. Once added, it will be visible\nin your Backstage instance under the ",(0,i.jsx)(t.a,{href:"https://demo.backstage.io/create/actions",children:"/create/actions"})," path. You can have multiple\nexamples for one action that can demonstrate different combinations of inputs and how to use them."]}),"\n",(0,i.jsx)(t.h4,{id:"define-templateexamples",children:"Define TemplateExamples"}),"\n",(0,i.jsxs)(t.p,{children:["Below is a sample TemplateExample that is used for ",(0,i.jsx)(t.code,{children:"publish:github"}),". The source code is available\non ",(0,i.jsx)(t.a,{href:"https://github.com/backstage/backstage/blob/master/plugins/scaffolder-backend-module-github/src/actions/github.examples.ts",children:"GitHub"}),"\nand preview on ",(0,i.jsx)(t.a,{href:"https://demo.backstage.io/create/actions#publish-github",children:"demo.backstage.io/create/actions"})]}),"\n",(0,i.jsx)(t.pre,{children:(0,i.jsx)(t.code,{className:"language-ts",metastring:'title="With JSON Schema"',children:"import { TemplateExample } from '@backstage/plugin-scaffolder-node';\nimport yaml from 'yaml';\n\nexport const examples: TemplateExample[] = [\n  {\n    description: 'Initializes a GitHub repository with a description.',\n    example: yaml.stringify({\n      steps: [\n        {\n          id: 'publish',\n          action: 'publish:github',\n          name: 'Publish to GitHub',\n          input: {\n            repoUrl: 'github.com?repo=repo&owner=owner',\n            description: 'Initialize a git repository',\n          },\n        },\n      ],\n    }),\n  },\n  {\n    description:\n      'Initializes a GitHub repository with public repo visibility, if not set defaults to private',\n    example: yaml.stringify({\n      steps: [\n        {\n          id: 'publish',\n          action: 'publish:github',\n          name: 'Publish to GitHub',\n          input: {\n            repoUrl: 'github.com?repo=repo&owner=owner',\n            repoVisibility: 'public',\n          },\n        },\n      ],\n    }),\n  },\n];\n"})}),"\n",(0,i.jsx)(t.h4,{id:"register-templateexample-with-your-custom-action",children:"Register TemplateExample with your custom action"}),"\n",(0,i.jsxs)(t.p,{children:["It is also crucial\nto ",(0,i.jsx)(t.a,{href:"https://github.com/backstage/backstage/blob/master/plugins/scaffolder-backend-module-github/src/actions/github.ts#L126",children:"register"}),"\nthe ",(0,i.jsx)(t.code,{children:"TemplateExample"})," when calling ",(0,i.jsx)(t.code,{children:"createTemplateAction"})," by including the ",(0,i.jsx)(t.code,{children:"examples"}),"\nproperty."]}),"\n",(0,i.jsx)(t.pre,{children:(0,i.jsx)(t.code,{className:"language-ts",children:"return createTemplateAction({\n  id: 'publish:github',\n  description:\n    'Initializes a git repository of contents in workspace and publishes it to GitHub.',\n  examples,\n  // ...rest of the action configuration\n});\n"})}),"\n",(0,i.jsx)(t.h4,{id:"test-templateaction-examples",children:"Test TemplateAction examples"}),"\n",(0,i.jsxs)(t.p,{children:["It is also possible to test your example TemplateActions. You can see a sample test\non ",(0,i.jsx)(t.a,{href:"https://github.com/backstage/backstage/blob/master/plugins/scaffolder-backend-module-github/src/actions/github.examples.test.ts",children:"GitHub"})]}),"\n",(0,i.jsx)(t.h3,{id:"the-context-object",children:"The context object"}),"\n",(0,i.jsxs)(t.p,{children:["When the action ",(0,i.jsx)(t.code,{children:"handler"})," is called, we provide you a ",(0,i.jsx)(t.code,{children:"context"})," as the only\nargument. It looks like the following:"]}),"\n",(0,i.jsxs)(t.ul,{children:["\n",(0,i.jsxs)(t.li,{children:[(0,i.jsx)(t.code,{children:"ctx.baseUrl"})," - a string where the template is located"]}),"\n",(0,i.jsxs)(t.li,{children:[(0,i.jsx)(t.code,{children:"ctx.checkpoint"})," - ",(0,i.jsx)(t.em,{children:"Experimental"})," allows to\nimplement ",(0,i.jsx)(t.a,{href:"https://github.com/backstage/backstage/tree/master/beps/0004-scaffolder-task-idempotency",children:"idempotency of the actions"}),"\nby not re-running the same function again if it was\nexecuted successfully on the previous run."]}),"\n",(0,i.jsxs)(t.li,{children:[(0,i.jsx)(t.code,{children:"ctx.logger"})," - a ",(0,i.jsx)(t.a,{href:"/docs/backend-system/core-services/logger",children:"LoggerService"})," instance for additional logging inside your action"]}),"\n",(0,i.jsxs)(t.li,{children:[(0,i.jsx)(t.code,{children:"ctx.workspacePath"})," - a string of the working directory of the template run"]}),"\n",(0,i.jsxs)(t.li,{children:[(0,i.jsx)(t.code,{children:"ctx.input"})," - an object which should match the ",(0,i.jsx)(t.code,{children:"zod"})," or JSON schema provided in the\n",(0,i.jsx)(t.code,{children:"schema.input"})," part of the action definition"]}),"\n",(0,i.jsxs)(t.li,{children:[(0,i.jsx)(t.code,{children:"ctx.output"})," - a function which you can call to set outputs that match the\n",(0,i.jsx)(t.code,{children:"zod"})," schema in ",(0,i.jsx)(t.code,{children:"schema.output"})," for ex. ",(0,i.jsx)(t.code,{children:"ctx.output('downloadUrl', myDownloadUrl)"})]}),"\n",(0,i.jsxs)(t.li,{children:[(0,i.jsx)(t.code,{children:"createTemporaryDirectory"})," a function to call to give you a temporary\ndirectory somewhere on the runner, so you can store some files there rather\nthan polluting the ",(0,i.jsx)(t.code,{children:"workspacePath"})]}),"\n",(0,i.jsxs)(t.li,{children:[(0,i.jsx)(t.code,{children:"ctx.metadata"})," - an object containing a ",(0,i.jsx)(t.code,{children:"name"})," field, indicating the template\nname. More metadata fields may be added later."]}),"\n"]}),"\n",(0,i.jsx)(t.h2,{id:"registering-custom-actions",children:"Registering Custom Actions"}),"\n",(0,i.jsx)(t.p,{children:"To register your new custom action in the Backend System, you will need to create a backend module. Here is a very\nsimplified example of how to do that:"}),"\n",(0,i.jsx)(t.pre,{children:(0,i.jsx)(t.code,{className:"language-ts",metastring:'title="packages/backend/src/index.ts"',children:"/* highlight-add-start */\nimport { scaffolderActionsExtensionPoint } from '@backstage/plugin-scaffolder-node/alpha';\nimport { createBackendModule } from '@backstage/backend-plugin-api';\n/* highlight-add-end */\n\n/* highlight-add-start */\nconst scaffolderModuleCustomExtensions = createBackendModule({\n  pluginId: 'scaffolder', // name of the plugin that the module is targeting\n  moduleId: 'custom-extensions',\n  register(env) {\n    env.registerInit({\n      deps: {\n        scaffolder: scaffolderActionsExtensionPoint,\n        // ... and other dependencies as needed\n      },\n      async init({ scaffolder /* ..., other dependencies */ }) {\n        // Here you have the opportunity to interact with the extension\n        // point before the plugin itself gets instantiated\n        scaffolder.addActions(createNewFileAction()); // just an example\n      },\n    });\n  },\n});\n/* highlight-add-end */\n\nconst backend = createBackend();\nbackend.add(import('@backstage/plugin-scaffolder-backend'));\n/* highlight-add-next-line */\nbackend.add(scaffolderModuleCustomExtensions);\n"})}),"\n",(0,i.jsxs)(t.p,{children:["If your custom action requires core services such as ",(0,i.jsx)(t.code,{children:"config"})," or ",(0,i.jsx)(t.code,{children:"cache"})," they can be imported in the dependencies and\npassed to the custom action function."]}),"\n",(0,i.jsx)(t.pre,{children:(0,i.jsx)(t.code,{className:"language-ts",metastring:'title="packages/backend/src/index.ts"',children:"import {\n  coreServices,\n  createBackendModule,\n} from '@backstage/backend-plugin-api';\n\n...\n\nenv.registerInit({\n  deps: {\n    scaffolder: scaffolderActionsExtensionPoint,\n    cache: coreServices.cache,\n    config: coreServices.rootConfig,\n  },\n  async init({scaffolder, cache, config}) {\n    scaffolder.addActions(\n      customActionNeedingCacheAndConfig({cache: cache, config: config}),\n    );\n  })\n"})}),"\n",(0,i.jsx)(t.h3,{id:"using-checkpoints-in-custom-actions-experimental",children:"Using Checkpoints in Custom Actions (Experimental)"}),"\n",(0,i.jsx)(t.p,{children:"Idempotent action could be achieved via the usage of checkpoints, for example:"}),"\n",(0,i.jsx)(t.pre,{children:(0,i.jsx)(t.code,{className:"language-ts",metastring:'title="plugins/my-company-scaffolder-actions-plugin/src/vendor/my-custom-action.ts"',children:"const res = await ctx.checkpoint?.({\n  key: 'create.projects',\n  fn: async () => {\n    const projectStgId = createStagingProjectId();\n    const projectProId = createProductionProjectId();\n\n    return {\n      projectStgId,\n      projectProId,\n    };\n  },\n});\n"})}),"\n",(0,i.jsx)(t.p,{children:"You have to define the unique key in the scope of the scaffolder task for your checkpoint. During the execution task engine\nwill check if the checkpoint with such a key was already executed or not, if yes, and the run was successful, the callback\nwill be skipped and instead the stored value will be returned."}),"\n",(0,i.jsxs)(t.p,{children:["Whenever you change the return type of the checkpoint, we encourage you to change the ID.\nFor example, you can embed the versioning or another indicator for that (instead of using key ",(0,i.jsx)(t.code,{children:"create.projects"}),", it can\nbe ",(0,i.jsx)(t.code,{children:"create.projects.v1"}),").\nIf you'll preserve the same key, and you'll try to restart the affected task, it will fail on this checkpoint.\nThe cached result will not match with the expected updated return type.\nBy changing the key, you'll invalidate the cache of the checkpoint."]}),"\n",(0,i.jsx)(t.h2,{id:"contributed-community-actions",children:"Contributed Community Actions"}),"\n",(0,i.jsx)(t.p,{children:"You can find a list of community-contributed and open-source actions by:"}),"\n",(0,i.jsxs)(t.ul,{children:["\n",(0,i.jsxs)(t.li,{children:["Going to the ",(0,i.jsx)(t.a,{href:"https://backstage.io/plugins/",children:"Backstage Plugin Directory"})," and filter by ",(0,i.jsx)(t.code,{children:"scaffolder"}),"!"]}),"\n",(0,i.jsxs)(t.li,{children:["Checking out the ",(0,i.jsx)(t.a,{href:"https://github.com/backstage/community-plugins",children:"Community Plugins Repo"}),"!"]}),"\n"]})]})}function h(e={}){const{wrapper:t}={...(0,o.R)(),...e.components};return t?(0,i.jsx)(t,{...e,children:(0,i.jsx)(d,{...e})}):d(e)}},221020:(e,t,n)=>{var i=n(296540),o=Symbol.for("react.element"),s=Symbol.for("react.fragment"),c=Object.prototype.hasOwnProperty,a=i.__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED.ReactCurrentOwner,r={key:!0,ref:!0,__self:!0,__source:!0};function l(e,t,n){var i,s={},l=null,d=null;for(i in void 0!==n&&(l=""+n),void 0!==t.key&&(l=""+t.key),void 0!==t.ref&&(d=t.ref),t)c.call(t,i)&&!r.hasOwnProperty(i)&&(s[i]=t[i]);if(e&&e.defaultProps)for(i in t=e.defaultProps)void 0===s[i]&&(s[i]=t[i]);return{$$typeof:o,type:e,key:l,ref:d,props:s,_owner:a.current}}t.Fragment=s,t.jsx=l,t.jsxs=l},474848:(e,t,n)=>{e.exports=n(221020)},28453:(e,t,n)=>{n.d(t,{R:()=>c,x:()=>a});var i=n(296540);const o={},s=i.createContext(o);function c(e){const t=i.useContext(s);return i.useMemo((function(){return"function"==typeof e?e(t):{...t,...e}}),[t,e])}function a(e){let t;return t=e.disableParentContext?"function"==typeof e.components?e.components(o):e.components||o:c(e.components),i.createElement(s.Provider,{value:t},e.children)}}}]);