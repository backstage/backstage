/*! For license information please see c13dcd2f.8d31aefd.js.LICENSE.txt */
"use strict";(self.webpackChunkbackstage_microsite=self.webpackChunkbackstage_microsite||[]).push([[959215],{601122:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>c,contentTitle:()=>a,default:()=>l,frontMatter:()=>s,metadata:()=>o,toc:()=>d});var r=t(474848),i=t(28453);const s={id:"frontend-plugin-api.createextensionblueprint",title:"createExtensionBlueprint()",description:"API reference for createExtensionBlueprint()"},a=void 0,o={id:"reference/frontend-plugin-api.createextensionblueprint",title:"createExtensionBlueprint()",description:"API reference for createExtensionBlueprint()",source:"@site/../docs/reference/frontend-plugin-api.createextensionblueprint.md",sourceDirName:"reference",slug:"/reference/frontend-plugin-api.createextensionblueprint",permalink:"/docs/next/reference/frontend-plugin-api.createextensionblueprint",draft:!1,unlisted:!1,editUrl:"https://github.com/backstage/backstage/edit/master/docs/reference/frontend-plugin-api.createextensionblueprint.md",tags:[],version:"current",frontMatter:{id:"frontend-plugin-api.createextensionblueprint",title:"createExtensionBlueprint()",description:"API reference for createExtensionBlueprint()"}},c={},d=[{value:"Parameters",id:"parameters",level:2},{value:"Remarks",id:"remarks",level:2},{value:"Example",id:"example",level:2}];function p(e){const n={a:"a",code:"code",h2:"h2",p:"p",pre:"pre",strong:"strong",table:"table",tbody:"tbody",td:"td",th:"th",thead:"thead",tr:"tr",...(0,i.R)(),...e.components};return(0,r.jsxs)(r.Fragment,{children:[(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.a,{href:"/docs/next/reference/",children:"Home"})," > ",(0,r.jsx)(n.a,{href:"/docs/next/reference/frontend-plugin-api",children:(0,r.jsx)(n.code,{children:"@backstage/frontend-plugin-api"})})," > ",(0,r.jsx)(n.a,{href:"/docs/next/reference/frontend-plugin-api.createextensionblueprint",children:(0,r.jsx)(n.code,{children:"createExtensionBlueprint"})})]}),"\n",(0,r.jsx)(n.p,{children:"Creates a new extension blueprint that encapsulates the creation of extensions of particular kinds."}),"\n",(0,r.jsx)(n.p,{children:(0,r.jsx)(n.strong,{children:"Signature:"})}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-typescript",children:"function createExtensionBlueprint<TParams extends object | ExtensionBlueprintDefineParams, UOutput extends ExtensionDataRef, TInputs extends {\n    [inputName in string]: ExtensionInput<ExtensionDataRef, {\n        optional: boolean;\n        singleton: boolean;\n    }>;\n}, TConfigSchema extends {\n    [key in string]: (zImpl: typeof z) => z.ZodType;\n}, UFactoryOutput extends ExtensionDataValue<any, any>, TKind extends string, TDataRefs extends {\n    [name in string]: ExtensionDataRef;\n} = never>(options: CreateExtensionBlueprintOptions<TKind, TParams, UOutput, TInputs, TConfigSchema, UFactoryOutput, TDataRefs>): ExtensionBlueprint<{\n    kind: TKind;\n    params: TParams;\n    output: UOutput extends ExtensionDataRef<infer IData, infer IId, infer IConfig> ? ExtensionDataRef<IData, IId, IConfig> : never;\n    inputs: string extends keyof TInputs ? {} : TInputs;\n    config: string extends keyof TConfigSchema ? {} : {\n        [key in keyof TConfigSchema]: z.infer<ReturnType<TConfigSchema[key]>>;\n    };\n    configInput: string extends keyof TConfigSchema ? {} : z.input<z.ZodObject<{\n        [key in keyof TConfigSchema]: ReturnType<TConfigSchema[key]>;\n    }>>;\n    dataRefs: TDataRefs;\n}>;\n"})}),"\n",(0,r.jsx)(n.h2,{id:"parameters",children:"Parameters"}),"\n",(0,r.jsxs)(n.table,{children:[(0,r.jsx)(n.thead,{children:(0,r.jsxs)(n.tr,{children:[(0,r.jsxs)(n.th,{children:["\n",(0,r.jsx)(n.p,{children:"Parameter"}),"\n"]}),(0,r.jsxs)(n.th,{children:["\n",(0,r.jsx)(n.p,{children:"Type"}),"\n"]}),(0,r.jsxs)(n.th,{children:["\n",(0,r.jsx)(n.p,{children:"Description"}),"\n"]})]})}),(0,r.jsx)(n.tbody,{children:(0,r.jsxs)(n.tr,{children:[(0,r.jsxs)(n.td,{children:["\n",(0,r.jsx)(n.p,{children:"options"}),"\n"]}),(0,r.jsxs)(n.td,{children:["\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.a,{href:"/docs/next/reference/frontend-plugin-api.createextensionblueprintoptions",children:"CreateExtensionBlueprintOptions"}),"<TKind, TParams, UOutput, TInputs, TConfigSchema, UFactoryOutput, TDataRefs>"]}),"\n"]}),(0,r.jsx)(n.td,{children:"\n"})]})})]}),"\n**Returns:**\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.a,{href:"/docs/next/reference/frontend-plugin-api.extensionblueprint",children:"ExtensionBlueprint"}),"<{ kind: TKind; params: TParams; output: UOutput extends ",(0,r.jsx)(n.a,{href:"/docs/next/reference/frontend-plugin-api.extensiondataref",children:"ExtensionDataRef"}),"<infer IData, infer IId, infer IConfig> ? ",(0,r.jsx)(n.a,{href:"/docs/next/reference/frontend-plugin-api.extensiondataref",children:"ExtensionDataRef"}),"<IData, IId, IConfig> : never; inputs: string extends keyof TInputs ? {} : TInputs; config: string extends keyof TConfigSchema ? {} : { [key in keyof TConfigSchema]: z.infer<ReturnType<TConfigSchema[key]>>; }; configInput: string extends keyof TConfigSchema ? {} : z.input<z.ZodObject<{ [key in keyof TConfigSchema]: ReturnType<TConfigSchema[key]>; }>>; dataRefs: TDataRefs; }>"]}),"\n",(0,r.jsx)(n.h2,{id:"remarks",children:"Remarks"}),"\n",(0,r.jsxs)(n.p,{children:["For details on how blueprints work, see the ",(0,r.jsx)(n.a,{href:"https://backstage.io/docs/frontend-system/architecture/extension-blueprints",children:"documentation for extension blueprints"})," in the frontend system documentation."]}),"\n",(0,r.jsxs)(n.p,{children:["Extension blueprints make it much easier for users to create new extensions for your plugin. Rather than letting them use ",(0,r.jsx)(n.a,{href:"/docs/next/reference/frontend-plugin-api.createextension",children:"createExtension()"})," directly, you can define a set of parameters and default factory for your blueprint, removing a lot of the boilerplate and complexity that is otherwise needed to create an extension."]}),"\n",(0,r.jsxs)(n.p,{children:["Each blueprint has its own ",(0,r.jsx)(n.code,{children:"kind"})," that helps identify and group the extensions that have been created with it. For example the ",(0,r.jsx)(n.a,{href:"/docs/next/reference/frontend-plugin-api.pageblueprint",children:"PageBlueprint"})," has the kind ",(0,r.jsx)(n.code,{children:"'page'"}),", and extensions created with it will be given the ID ",(0,r.jsx)(n.code,{children:"'page:<plugin-id>[/<name>]'"}),". Blueprints should always be exported as ",(0,r.jsx)(n.code,{children:"<PascalCaseKind>Blueprint"}),"."]}),"\n",(0,r.jsxs)(n.p,{children:["When creating a blueprint the type of the parameters are inferred from the ",(0,r.jsx)(n.code,{children:"factory"})," function that you provide. The exception to that is when you need your blueprint to include inferred type parameters, in which case you need to use the ",(0,r.jsx)(n.code,{children:"defineParams"})," option. See the documentation for the ",(0,r.jsx)(n.code,{children:"defineParams"})," option for more details on how that works."]}),"\n",(0,r.jsx)(n.h2,{id:"example",children:"Example"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-tsx",children:"// In your plugin library\nexport const GreetingBlueprint = createExtensionBlueprint({\n  kind: 'greeting',\n  attachTo: { id: 'example', input: 'greetings' },\n  output: [coreExtensionData.reactElement],\n  factory(params: { greeting: string }) {\n    return [coreExtensionData.reactElement(<h1>{params.greeting}</h1>)];\n  },\n});\n\n// Someone using your blueprint in their plugin\nconst exampleGreeting = GreetingBlueprint.make({\n  params: {\n    greeting: 'Hello, world!',\n  },\n});\n"})})]})}function l(e={}){const{wrapper:n}={...(0,i.R)(),...e.components};return n?(0,r.jsx)(n,{...e,children:(0,r.jsx)(p,{...e})}):p(e)}},221020:(e,n,t)=>{var r=t(296540),i=Symbol.for("react.element"),s=Symbol.for("react.fragment"),a=Object.prototype.hasOwnProperty,o=r.__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED.ReactCurrentOwner,c={key:!0,ref:!0,__self:!0,__source:!0};function d(e,n,t){var r,s={},d=null,p=null;for(r in void 0!==t&&(d=""+t),void 0!==n.key&&(d=""+n.key),void 0!==n.ref&&(p=n.ref),n)a.call(n,r)&&!c.hasOwnProperty(r)&&(s[r]=n[r]);if(e&&e.defaultProps)for(r in n=e.defaultProps)void 0===s[r]&&(s[r]=n[r]);return{$$typeof:i,type:e,key:d,ref:p,props:s,_owner:o.current}}n.Fragment=s,n.jsx=d,n.jsxs=d},474848:(e,n,t)=>{e.exports=t(221020)},28453:(e,n,t)=>{t.d(n,{R:()=>a,x:()=>o});var r=t(296540);const i={},s=r.createContext(i);function a(e){const n=r.useContext(s);return r.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function o(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(i):e.components||i:a(e.components),r.createElement(s.Provider,{value:n},e.children)}}}]);