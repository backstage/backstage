/*! For license information please see 1ef0edbe.f8aa8ea9.js.LICENSE.txt */
"use strict";(self.webpackChunkbackstage_microsite=self.webpackChunkbackstage_microsite||[]).push([[921287],{837227:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>c,contentTitle:()=>o,default:()=>d,frontMatter:()=>s,metadata:()=>a,toc:()=>l});var r=n(474848),i=n(28453);const s={id:"http-router",title:"Http Router Service",sidebar_label:"Http Router",description:"Documentation for the Http Router service"},o=void 0,a={id:"backend-system/core-services/http-router",title:"Http Router Service",description:"Documentation for the Http Router service",source:"@site/../docs/backend-system/core-services/http-router.md",sourceDirName:"backend-system/core-services",slug:"/backend-system/core-services/http-router",permalink:"/docs/next/backend-system/core-services/http-router",draft:!1,unlisted:!1,editUrl:"https://github.com/backstage/backstage/edit/master/docs/backend-system/core-services/http-router.md",tags:[],version:"current",frontMatter:{id:"http-router",title:"Http Router Service",sidebar_label:"Http Router",description:"Documentation for the Http Router service"},sidebar:"docs",previous:{title:"Http Auth",permalink:"/docs/next/backend-system/core-services/http-auth"},next:{title:"Identity",permalink:"/docs/next/backend-system/core-services/identity"}},c={},l=[{value:"Using the service",id:"using-the-service",level:2},{value:"Rate limiting",id:"rate-limiting",level:2},{value:"Configuring the service",id:"configuring-the-service",level:2}];function u(e){const t={a:"a",code:"code",h2:"h2",p:"p",pre:"pre",...(0,i.R)(),...e.components};return(0,r.jsxs)(r.Fragment,{children:[(0,r.jsx)(t.p,{children:"One of the most common services is the HTTP router service which is used to\nexpose HTTP endpoints for other plugins to consume."}),"\n",(0,r.jsx)(t.h2,{id:"using-the-service",children:"Using the service"}),"\n",(0,r.jsxs)(t.p,{children:["The following example shows how to register a HTTP router for the ",(0,r.jsx)(t.code,{children:"example"})," plugin.\nThis single route will be available at the ",(0,r.jsx)(t.code,{children:"/api/example/hello"})," path."]}),"\n",(0,r.jsx)(t.pre,{children:(0,r.jsx)(t.code,{className:"language-ts",children:"import {\n  coreServices,\n  createBackendPlugin,\n} from '@backstage/backend-plugin-api';\nimport { Router } from 'express';\n\ncreateBackendPlugin({\n  pluginId: 'example',\n  register(env) {\n    env.registerInit({\n      deps: { http: coreServices.httpRouter },\n      async init({ http }) {\n        const router = Router();\n        router.get('/hello', (_req, res) => {\n          res.status(200).json({ hello: 'world' });\n        });\n        // Registers the router at the /api/example path\n        http.use(router);\n      },\n    });\n  },\n});\n"})}),"\n",(0,r.jsx)(t.p,{children:"This service is also responsible for keeping track of the auth policies that\napply to your routes. The default policy is to require that auth is present with\nevery incoming request, and to accept both service and user credentials\n(excluding limited access tokens). You can override this while registering your\nroutes. This dangerously allows unauthenticated access on a specific route:"}),"\n",(0,r.jsx)(t.pre,{children:(0,r.jsx)(t.code,{className:"language-ts",children:"http.addAuthPolicy({\n  path: '/static/:id',\n  allow: 'unauthenticated',\n});\n"})}),"\n",(0,r.jsx)(t.p,{children:"Note that the path is exactly the same format as what you used in your routes,\nincluding placeholders."}),"\n",(0,r.jsx)(t.p,{children:"If your plugin uses cookie based access (which is rare), you need to allow that\nas follows:"}),"\n",(0,r.jsx)(t.pre,{children:(0,r.jsx)(t.code,{className:"language-ts",children:"http.addAuthPolicy({\n  path: '/static/:id',\n  allow: 'user-cookie',\n});\n"})}),"\n",(0,r.jsxs)(t.p,{children:["For those routes you will also have to specify ",(0,r.jsx)(t.code,{children:"allowLimitedAccess: true"})," when\nusing the ",(0,r.jsx)(t.a,{href:"/docs/next/backend-system/core-services/auth",children:(0,r.jsx)(t.code,{children:"auth"})})," and ",(0,r.jsx)(t.a,{href:"/docs/next/backend-system/core-services/http-auth",children:(0,r.jsx)(t.code,{children:"httpAuth"})})," services to\naccess the incoming credentials."]}),"\n",(0,r.jsx)(t.h2,{id:"rate-limiting",children:"Rate limiting"}),"\n",(0,r.jsx)(t.p,{children:"Rate limiting allows you to limit the amount of requests users can send to you backend.\nThis is useful for blocking various network attacks, such as DDOS."}),"\n",(0,r.jsx)(t.p,{children:"To enable rate limiting, add the following to your config:"}),"\n",(0,r.jsx)(t.pre,{children:(0,r.jsx)(t.code,{className:"language-yaml",children:"backend:\n  rateLimit: true\n"})}),"\n",(0,r.jsx)(t.p,{children:"You can additionally configure the rate limiting parameters, also by plugin:"}),"\n",(0,r.jsx)(t.pre,{children:(0,r.jsx)(t.code,{className:"language-yaml",children:"backend:\n  rateLimit:\n    global: true # Enables or disables rate limit for all plugins\n    window: 6s # Time window for rate limiting for single client\n    incomingRequestLimit: 100 # Number of requests to accept from one client during time window\n    ipAllowList: ['127.0.0.1'] # IPs to bypass rate limiting\n    skipSuccesfulRequests: false # Rate limit successful requests\n    skipFailedRequests: false # Rate limit failed requests\n    plugin:\n      # Plugin specific rate limiting\n      catalog:\n        window: 3s\n        incomingRequestLimit: 50\n"})}),"\n",(0,r.jsx)(t.p,{children:"By default, the rate limiting is per instance and the request counts are stored into memory.\nIf you want to share this information across all your backstage instances, you have to configure\nthe rate limiting store:"}),"\n",(0,r.jsx)(t.pre,{children:(0,r.jsx)(t.code,{className:"language-yaml",children:"backend:\n  rateLimit:\n    global: true\n    store:\n      type: redis\n      connection: redis://127.0.0.1:16379\n"})}),"\n",(0,r.jsx)(t.p,{children:"If your instance is working behind a proxy, you have to configure the backend to trust the proxy\nfor the rate limiting being able to distinguish clients."}),"\n",(0,r.jsx)(t.pre,{children:(0,r.jsx)(t.code,{className:"language-yaml",children:"backend:\n  trustProxy: true\n"})}),"\n",(0,r.jsxs)(t.p,{children:["For more information about the trust proxy configuration and available options,\nplease refer to ",(0,r.jsx)(t.a,{href:"https://expressjs.com/en/guide/behind-proxies.html",children:"express documentation"}),"."]}),"\n",(0,r.jsx)(t.h2,{id:"configuring-the-service",children:"Configuring the service"}),"\n",(0,r.jsxs)(t.p,{children:["For more advanced customization, there are several APIs from the ",(0,r.jsx)(t.code,{children:"@backstage/backend-defaults/httpRouter"})," package that allow you to customize the implementation of the config service. The default implementation uses all of the middleware exported from ",(0,r.jsx)(t.code,{children:"@backstage/backend-defaults/httpRouter"}),", including ",(0,r.jsx)(t.code,{children:"createLifecycleMiddleware"}),", ",(0,r.jsx)(t.code,{children:"createAuthIntegrationRouter"}),", ",(0,r.jsx)(t.code,{children:"createCredentialsBarrier"})," and ",(0,r.jsx)(t.code,{children:"createCookieAuthRefreshMiddleware"}),". You can use these to create your own ",(0,r.jsx)(t.code,{children:"httpRouter"})," service implementation, for example - here's how you would add a custom health check route to all plugins:"]}),"\n",(0,r.jsx)(t.pre,{children:(0,r.jsx)(t.code,{className:"language-ts",children:"import {\n  createLifecycleMiddleware,\n  createCookieAuthRefreshMiddleware,\n  createCredentialsBarrier,\n  createAuthIntegrationRouter,\n  createRateLimitMiddleware,\n} from '@backstage/backend-defaults/httpRouter';\nimport PromiseRouter from 'express-promise-router';\nimport { Handler } from 'express';\nimport {\n  createServiceFactory,\n  coreServices,\n  HttpRouterServiceAuthPolicy,\n} from '@backstage/backend-plugin-api';\n\nconst backend = createBackend();\n\nbackend.add(\n  createServiceFactory({\n    service: coreServices.httpRouter,\n    initialization: 'always',\n    deps: {\n      plugin: coreServices.pluginMetadata,\n      config: coreServices.rootConfig,\n      lifecycle: coreServices.lifecycle,\n      rootHttpRouter: coreServices.rootHttpRouter,\n      auth: coreServices.auth,\n      httpAuth: coreServices.httpAuth,\n    },\n    async factory({\n      auth,\n      httpAuth,\n      config,\n      plugin,\n      rootHttpRouter,\n      lifecycle,\n    }) {\n      const router = PromiseRouter();\n\n      // Optional rate limiting middleware\n      router.use(\n        createRateLimitMiddleware({ pluginId: plugin.getId(), config }),\n      );\n\n      rootHttpRouter.use(`/api/${plugin.getId()}`, router);\n\n      const credentialsBarrier = createCredentialsBarrier({\n        httpAuth,\n        config,\n      });\n\n      router.use(createAuthIntegrationRouter({ auth }));\n      router.use(createLifecycleMiddleware({ config, lifecycle }));\n      router.use(credentialsBarrier.middleware);\n      router.use(createCookieAuthRefreshMiddleware({ auth, httpAuth }));\n\n      // Add a custom healthcheck endpoint for all plugins.\n      router.use('/health', (_, res) => {\n        res.status(200);\n      });\n\n      return {\n        use(handler: Handler): void {\n          router.use(handler);\n        },\n        addAuthPolicy(policy: HttpRouterServiceAuthPolicy): void {\n          credentialsBarrier.addAuthPolicy(policy);\n        },\n      };\n    },\n  }),\n);\n"})})]})}function d(e={}){const{wrapper:t}={...(0,i.R)(),...e.components};return t?(0,r.jsx)(t,{...e,children:(0,r.jsx)(u,{...e})}):u(e)}},221020:(e,t,n)=>{var r=n(296540),i=Symbol.for("react.element"),s=Symbol.for("react.fragment"),o=Object.prototype.hasOwnProperty,a=r.__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED.ReactCurrentOwner,c={key:!0,ref:!0,__self:!0,__source:!0};function l(e,t,n){var r,s={},l=null,u=null;for(r in void 0!==n&&(l=""+n),void 0!==t.key&&(l=""+t.key),void 0!==t.ref&&(u=t.ref),t)o.call(t,r)&&!c.hasOwnProperty(r)&&(s[r]=t[r]);if(e&&e.defaultProps)for(r in t=e.defaultProps)void 0===s[r]&&(s[r]=t[r]);return{$$typeof:i,type:e,key:l,ref:u,props:s,_owner:a.current}}t.Fragment=s,t.jsx=l,t.jsxs=l},474848:(e,t,n)=>{e.exports=n(221020)},28453:(e,t,n)=>{n.d(t,{R:()=>o,x:()=>a});var r=n(296540);const i={},s=r.createContext(i);function o(e){const t=r.useContext(s);return r.useMemo((function(){return"function"==typeof e?e(t):{...t,...e}}),[t,e])}function a(e){let t;return t=e.disableParentContext?"function"==typeof e.components?e.components(i):e.components||i:o(e.components),r.createElement(s.Provider,{value:t},e.children)}}}]);