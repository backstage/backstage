/*! For license information please see 495ffbce.b49f5ed4.js.LICENSE.txt */
"use strict";(self.webpackChunkbackstage_microsite=self.webpackChunkbackstage_microsite||[]).push([[652555],{11580:(e,n,c)=>{c.r(n),c.d(n,{assets:()=>o,contentTitle:()=>r,default:()=>h,frontMatter:()=>t,metadata:()=>i,toc:()=>l});var s=c(474848),a=c(28453);const t={id:"cache",title:"Cache Service",sidebar_label:"Cache",description:"Documentation for the Cache service"},r=void 0,i={id:"backend-system/core-services/cache",title:"Cache Service",description:"Documentation for the Cache service",source:"@site/versioned_docs/version-stable/backend-system/core-services/cache.md",sourceDirName:"backend-system/core-services",slug:"/backend-system/core-services/cache",permalink:"/docs/backend-system/core-services/cache",draft:!1,unlisted:!1,editUrl:"https://github.com/backstage/backstage/edit/master/docs/backend-system/core-services/cache.md",tags:[],version:"stable",frontMatter:{id:"cache",title:"Cache Service",sidebar_label:"Cache",description:"Documentation for the Cache service"},sidebar:"docs",previous:{title:"Auth",permalink:"/docs/backend-system/core-services/auth"},next:{title:"Database",permalink:"/docs/backend-system/core-services/database"}},o={},l=[{value:"Configuration",id:"configuration",level:2},{value:"Namespace Configuration",id:"namespace-configuration",level:3},{value:"Using the service",id:"using-the-service",level:2}];function d(e){const n={code:"code",h2:"h2",h3:"h3",li:"li",p:"p",pre:"pre",strong:"strong",ul:"ul",...(0,a.R)(),...e.components};return(0,s.jsxs)(s.Fragment,{children:[(0,s.jsx)(n.p,{children:"This service lets your plugin interact with a cache. It is bound to your plugin too, so that you will only set and get values in your plugin's private namespace."}),"\n",(0,s.jsx)(n.h2,{id:"configuration",children:"Configuration"}),"\n",(0,s.jsxs)(n.p,{children:["The cache service can be configured using the ",(0,s.jsx)(n.code,{children:"backend.cache"})," section in your ",(0,s.jsx)(n.code,{children:"app-config.yaml"}),":"]}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-yaml",children:"backend:\n  cache:\n    store: redis # or 'valkey', 'memcache', 'memory'\n    connection: redis://localhost:6379\n\n    # Store-specific configuration (Redis/Valkey only)\n    redis:\n      client:\n        # Optional: Global namespace prefix for all cache keys\n        namespace: 'my-app'\n        # Optional: Separator used between namespace and plugin ID (default: ':')\n        keyPrefixSeparator: ':'\n        # Other Redis-specific options...\n        clearBatchSize: 1000\n        useUnlink: false\n"})}),"\n",(0,s.jsx)(n.h3,{id:"namespace-configuration",children:"Namespace Configuration"}),"\n",(0,s.jsx)(n.p,{children:"For Redis and Valkey stores, you can configure a global namespace that will be prefixed to all cache keys:"}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:"Without namespace"}),": Cache keys use only the plugin ID (e.g., ",(0,s.jsx)(n.code,{children:"catalog:some-key"}),")"]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:"With namespace"}),": Cache keys use the format ",(0,s.jsx)(n.code,{children:"namespace:pluginId:key"})," (e.g., ",(0,s.jsx)(n.code,{children:"my-app:catalog:some-key"}),")"]}),"\n"]}),"\n",(0,s.jsxs)(n.p,{children:["The ",(0,s.jsx)(n.code,{children:"keyPrefixSeparator"})," controls what character is used between the namespace and plugin ID (defaults to ",(0,s.jsx)(n.code,{children:":"}),")."]}),"\n",(0,s.jsxs)(n.p,{children:[(0,s.jsx)(n.strong,{children:"Note"}),": Memory and Memcache stores do not support namespace configuration and will always use the plugin ID directly."]}),"\n",(0,s.jsx)(n.h2,{id:"using-the-service",children:"Using the service"}),"\n",(0,s.jsxs)(n.p,{children:["The following example shows how to get a cache client in your ",(0,s.jsx)(n.code,{children:"example"})," backend plugin and setting and getting values from the cache."]}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-ts",children:"import {\n  coreServices,\n  createBackendPlugin,\n} from '@backstage/backend-plugin-api';\n\ncreateBackendPlugin({\n  pluginId: 'example',\n  register(env) {\n    env.registerInit({\n      deps: {\n        cache: coreServices.cache,\n      },\n      async init({ cache }) {\n        const { key, value } = { key: 'test:key', value: 'bob' };\n        await cache.set(key, value, { ttl: 1000 });\n\n        // .. some other stuff.\n\n        await cache.get(key); // 'bob'\n      },\n    });\n  },\n});\n"})})]})}function h(e={}){const{wrapper:n}={...(0,a.R)(),...e.components};return n?(0,s.jsx)(n,{...e,children:(0,s.jsx)(d,{...e})}):d(e)}},221020:(e,n,c)=>{var s=c(296540),a=Symbol.for("react.element"),t=Symbol.for("react.fragment"),r=Object.prototype.hasOwnProperty,i=s.__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED.ReactCurrentOwner,o={key:!0,ref:!0,__self:!0,__source:!0};function l(e,n,c){var s,t={},l=null,d=null;for(s in void 0!==c&&(l=""+c),void 0!==n.key&&(l=""+n.key),void 0!==n.ref&&(d=n.ref),n)r.call(n,s)&&!o.hasOwnProperty(s)&&(t[s]=n[s]);if(e&&e.defaultProps)for(s in n=e.defaultProps)void 0===t[s]&&(t[s]=n[s]);return{$$typeof:a,type:e,key:l,ref:d,props:t,_owner:i.current}}n.Fragment=t,n.jsx=l,n.jsxs=l},474848:(e,n,c)=>{e.exports=c(221020)},28453:(e,n,c)=>{c.d(n,{R:()=>r,x:()=>i});var s=c(296540);const a={},t=s.createContext(a);function r(e){const n=s.useContext(t);return s.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function i(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(a):e.components||a:r(e.components),s.createElement(t.Provider,{value:n},e.children)}}}]);