/*! For license information please see 41db01ff.46a8cdaa.js.LICENSE.txt */
"use strict";(self.webpackChunkbackstage_microsite=self.webpackChunkbackstage_microsite||[]).push([[916901],{291537:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>a,contentTitle:()=>c,default:()=>h,frontMatter:()=>r,metadata:()=>o,toc:()=>d});var i=t(474848),s=t(28453);const r={id:"actions-registry",title:"Actions Registry (alpha)",sidebar_label:"Actions Registry (alpha)",description:"Documentation for the Actions Registry Service"},c=void 0,o={id:"backend-system/core-services/actions-registry",title:"Actions Registry (alpha)",description:"Documentation for the Actions Registry Service",source:"@site/versioned_docs/version-stable/backend-system/core-services/actions-registry.md",sourceDirName:"backend-system/core-services",slug:"/backend-system/core-services/actions-registry",permalink:"/docs/backend-system/core-services/actions-registry",draft:!1,unlisted:!1,editUrl:"https://github.com/backstage/backstage/edit/master/docs/backend-system/core-services/actions-registry.md",tags:[],version:"stable",frontMatter:{id:"actions-registry",title:"Actions Registry (alpha)",sidebar_label:"Actions Registry (alpha)",description:"Documentation for the Actions Registry Service"},sidebar:"docs",previous:{title:"User Info",permalink:"/docs/backend-system/core-services/user-info"},next:{title:"Actions (alpha)",permalink:"/docs/backend-system/core-services/actions"}},a={},d=[{value:"Overview",id:"overview",level:2},{value:"Action Structure",id:"action-structure",level:2},{value:"Required Properties",id:"required-properties",level:3},{value:"Optional Properties",id:"optional-properties",level:3},{value:"Action Context",id:"action-context",level:3},{value:"Using the Service",id:"using-the-service",level:2},{value:"Registering an Action",id:"registering-an-action",level:3},{value:"Accessing the Service in a Plugin",id:"accessing-the-service-in-a-plugin",level:3},{value:"Best Practices",id:"best-practices",level:2},{value:"Naming Conventions",id:"naming-conventions",level:3},{value:"Action Attributes Reference",id:"action-attributes-reference",level:2}];function l(e){const n={code:"code",h2:"h2",h3:"h3",li:"li",p:"p",pre:"pre",strong:"strong",table:"table",tbody:"tbody",td:"td",th:"th",thead:"thead",tr:"tr",ul:"ul",...(0,s.R)(),...e.components};return(0,i.jsxs)(i.Fragment,{children:[(0,i.jsx)(n.h2,{id:"overview",children:"Overview"}),"\n",(0,i.jsx)(n.p,{children:"The Actions Registry Service is a core service designed to provide a distributed registry for actions that can be executed within Backstage backend plugins. This service allows plugins to register reusable actions with well-defined schemas and execution logic, promoting consistency and reusability across the Backstage ecosystem."}),"\n",(0,i.jsx)(n.h2,{id:"action-structure",children:"Action Structure"}),"\n",(0,i.jsxs)(n.p,{children:["Each action registered with the service must conform to the ",(0,i.jsx)(n.code,{children:"ActionsRegistryActionOptions"})," type, which includes:"]}),"\n",(0,i.jsx)(n.h3,{id:"required-properties",children:"Required Properties"}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:[(0,i.jsxs)(n.strong,{children:[(0,i.jsx)(n.code,{children:"name"}),":"]})," A unique identifier for the action (string)"]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsxs)(n.strong,{children:[(0,i.jsx)(n.code,{children:"title"}),":"]})," A human-readable title for the action (string)"]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsxs)(n.strong,{children:[(0,i.jsx)(n.code,{children:"description"}),":"]})," A detailed description of what the action does (string)"]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsxs)(n.strong,{children:[(0,i.jsx)(n.code,{children:"schema"}),":"]})," Object containing input and output schema definitions\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:[(0,i.jsxs)(n.strong,{children:[(0,i.jsx)(n.code,{children:"input"}),":"]})," Function that returns a Zod schema for validating input"]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsxs)(n.strong,{children:[(0,i.jsx)(n.code,{children:"output"}),":"]})," Function that returns a Zod schema for validating output"]}),"\n"]}),"\n"]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsxs)(n.strong,{children:[(0,i.jsx)(n.code,{children:"action"}),":"]})," The async function that executes the action logic"]}),"\n"]}),"\n",(0,i.jsx)(n.h3,{id:"optional-properties",children:"Optional Properties"}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:[(0,i.jsxs)(n.strong,{children:[(0,i.jsx)(n.code,{children:"attributes"}),":"]})," Object containing behavioral flags:\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:[(0,i.jsxs)(n.strong,{children:[(0,i.jsx)(n.code,{children:"destructive"}),":"]})," Boolean indicating if the action modifies or deletes data"]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsxs)(n.strong,{children:[(0,i.jsx)(n.code,{children:"idempotent"}),":"]})," Boolean indicating if running the action multiple times produces the same result"]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsxs)(n.strong,{children:[(0,i.jsx)(n.code,{children:"readOnly"}),":"]})," Boolean indicating if the action only reads data without modifications"]}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,i.jsx)(n.h3,{id:"action-context",children:"Action Context"}),"\n",(0,i.jsxs)(n.p,{children:["When an action is executed, it receives a context object (",(0,i.jsx)(n.code,{children:"ActionsRegistryActionContext"}),") containing:"]}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:[(0,i.jsxs)(n.strong,{children:[(0,i.jsx)(n.code,{children:"input"}),":"]})," The validated input data matching the defined input schema"]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsxs)(n.strong,{children:[(0,i.jsx)(n.code,{children:"logger"}),":"]})," A LoggerService instance for logging within the action"]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsxs)(n.strong,{children:[(0,i.jsx)(n.code,{children:"credentials"}),":"]})," BackstageCredentials for authentication and authorization"]}),"\n"]}),"\n",(0,i.jsx)(n.h2,{id:"using-the-service",children:"Using the Service"}),"\n",(0,i.jsx)(n.h3,{id:"registering-an-action",children:"Registering an Action"}),"\n",(0,i.jsx)(n.p,{children:"Here's an example of how to register an action with the Actions Registry Service:"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-typescript",children:"import { ActionsRegistryService } from '@backstage/backend-plugin-api/alpha';\n\nexport function registerMyActions(actionsRegistry: ActionsRegistryService) {\n  // Register a simple read-only action\n  actionsRegistry.register({\n    name: 'fetch-user-info',\n    title: 'Fetch User Information',\n    description: 'Retrieves user information from the catalog',\n    schema: {\n      input: z =>\n        z.object({\n          userRef: z.string(),\n          includeGroups: z.boolean().optional(),\n        }),\n      output: z =>\n        z.object({\n          user: z.object({\n            name: z.string(),\n            email: z.string(),\n            groups: z.array(z.string()).optional(),\n          }),\n        }),\n    },\n    attributes: {\n      readOnly: true,\n      idempotent: true,\n    },\n    action: async ({ input, logger, credentials }) => {\n      logger.info(`Fetching user info for ${input.userRef}`);\n\n      // Perform the action logic here\n      const user = await fetchUserFromCatalog(input.userRef, credentials);\n\n      return {\n        output: {\n          user: {\n            name: user.name,\n            email: user.email,\n            groups: input.includeGroups ? user.groups : undefined,\n          },\n        },\n      };\n    },\n  });\n\n  // Register a destructive action\n  actionsRegistry.register({\n    name: 'delete-entity',\n    title: 'Delete Entity',\n    description: 'Removes an entity from the catalog',\n    schema: {\n      input: z =>\n        z.object({\n          entityRef: z.string(),\n          force: z.boolean().optional(),\n        }),\n      output: z =>\n        z.object({\n          deletedEntities: z.array(z.string()),\n        }),\n    },\n    attributes: {\n      destructive: true,\n      idempotent: false,\n    },\n    action: async ({ input, logger, credentials }) => {\n      logger.warn(`Deleting entity ${input.entityRef}`);\n\n      // Perform the deletion logic here\n      const { deletedEntities } = await deleteEntityFromCatalog(\n        input.entityRef,\n        input.force,\n        credentials,\n      );\n\n      return {\n        output: deletedEntities,\n      };\n    },\n  });\n}\n"})}),"\n",(0,i.jsx)(n.h3,{id:"accessing-the-service-in-a-plugin",children:"Accessing the Service in a Plugin"}),"\n",(0,i.jsx)(n.p,{children:"To use the Actions Registry Service in your plugin, access it through dependency injection:"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-typescript",children:"import {\n  createBackendPlugin,\n  coreServices,\n} from '@backstage/backend-plugin-api';\nimport { actionsRegistryServiceRef } from '@backstage/backend-plugin-api/alpha';\n\nexport const myPlugin = createBackendPlugin({\n  pluginId: 'my-plugin',\n  register(env) {\n    env.registerInit({\n      deps: {\n        actionsRegistry: actionsRegistryServiceRef,\n        logger: coreServices.logger,\n      },\n      async init({ actionsRegistry, logger }) {\n        logger.info('Registering actions...');\n        registerMyActions(actionsRegistry);\n        logger.info('Actions registered successfully');\n      },\n    });\n  },\n});\n"})}),"\n",(0,i.jsx)(n.h2,{id:"best-practices",children:"Best Practices"}),"\n",(0,i.jsx)(n.h3,{id:"naming-conventions",children:"Naming Conventions"}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Use kebab-case:"})," Action names should be in kebab-case (e.g., ",(0,i.jsx)(n.code,{children:"fetch-user-info"}),", ",(0,i.jsx)(n.code,{children:"create-repository"}),")"]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Be Descriptive:"})," Choose names that clearly describe what the action does"]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Avoid Redundancy:"})," Don't include plugin names in action names since the plugin context is separate"]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Use Verbs:"})," Start action names with verbs that describe the operation (e.g., ",(0,i.jsx)(n.code,{children:"fetch"}),", ",(0,i.jsx)(n.code,{children:"create"}),", ",(0,i.jsx)(n.code,{children:"delete"}),", ",(0,i.jsx)(n.code,{children:"update"}),")"]}),"\n"]}),"\n",(0,i.jsx)(n.h2,{id:"action-attributes-reference",children:"Action Attributes Reference"}),"\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n",(0,i.jsxs)(n.table,{children:[(0,i.jsx)(n.thead,{children:(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.th,{children:"Attribute"}),(0,i.jsx)(n.th,{children:"Type"}),(0,i.jsx)(n.th,{children:"Default"}),(0,i.jsx)(n.th,{children:"Description"})]})}),(0,i.jsxs)(n.tbody,{children:[(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.td,{children:(0,i.jsx)(n.code,{children:"destructive"})}),(0,i.jsx)(n.td,{children:"boolean"}),(0,i.jsx)(n.td,{children:(0,i.jsx)(n.code,{children:"true"})}),(0,i.jsx)(n.td,{children:"Indicates the action modifies or deletes data. Use with caution."})]}),(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.td,{children:(0,i.jsx)(n.code,{children:"idempotent"})}),(0,i.jsx)(n.td,{children:"boolean"}),(0,i.jsx)(n.td,{children:(0,i.jsx)(n.code,{children:"false"})}),(0,i.jsx)(n.td,{children:"Indicates the action can be run multiple times with the same result"})]}),(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.td,{children:(0,i.jsx)(n.code,{children:"readOnly"})}),(0,i.jsx)(n.td,{children:"boolean"}),(0,i.jsx)(n.td,{children:(0,i.jsx)(n.code,{children:"false"})}),(0,i.jsx)(n.td,{children:"Indicates the action only reads data without making modifications"})]})]})]}),"\n",(0,i.jsx)(n.p,{children:"These attributes help consumers of actions understand their behavior and implement appropriate safeguards, retries, or optimizations based on the action's characteristics."})]})}function h(e={}){const{wrapper:n}={...(0,s.R)(),...e.components};return n?(0,i.jsx)(n,{...e,children:(0,i.jsx)(l,{...e})}):l(e)}},221020:(e,n,t)=>{var i=t(296540),s=Symbol.for("react.element"),r=Symbol.for("react.fragment"),c=Object.prototype.hasOwnProperty,o=i.__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED.ReactCurrentOwner,a={key:!0,ref:!0,__self:!0,__source:!0};function d(e,n,t){var i,r={},d=null,l=null;for(i in void 0!==t&&(d=""+t),void 0!==n.key&&(d=""+n.key),void 0!==n.ref&&(l=n.ref),n)c.call(n,i)&&!a.hasOwnProperty(i)&&(r[i]=n[i]);if(e&&e.defaultProps)for(i in n=e.defaultProps)void 0===r[i]&&(r[i]=n[i]);return{$$typeof:s,type:e,key:d,ref:l,props:r,_owner:o.current}}n.Fragment=r,n.jsx=d,n.jsxs=d},474848:(e,n,t)=>{e.exports=t(221020)},28453:(e,n,t)=>{t.d(n,{R:()=>c,x:()=>o});var i=t(296540);const s={},r=i.createContext(s);function c(e){const n=i.useContext(r);return i.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function o(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(s):e.components||s:c(e.components),i.createElement(r.Provider,{value:n},e.children)}}}]);