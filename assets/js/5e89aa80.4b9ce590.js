/*! For license information please see 5e89aa80.4b9ce590.js.LICENSE.txt */
"use strict";(self.webpackChunkbackstage_microsite=self.webpackChunkbackstage_microsite||[]).push([[712950],{986951:(n,e,o)=>{o.r(e),o.d(e,{assets:()=>c,contentTitle:()=>t,default:()=>y,frontMatter:()=>l,metadata:()=>d,toc:()=>i});var a=o(474848),r=o(28453);const l={id:"canon.componentdefinitions",title:"componentDefinitions",description:"API reference for componentDefinitions"},t=void 0,d={id:"reference/canon.componentdefinitions",title:"componentDefinitions",description:"API reference for componentDefinitions",source:"@site/../docs/reference/canon.componentdefinitions.md",sourceDirName:"reference",slug:"/reference/canon.componentdefinitions",permalink:"/docs/next/reference/canon.componentdefinitions",draft:!1,unlisted:!1,editUrl:"https://github.com/backstage/backstage/edit/master/docs/reference/canon.componentdefinitions.md",tags:[],version:"current",frontMatter:{id:"canon.componentdefinitions",title:"componentDefinitions",description:"API reference for componentDefinitions"}},c={},i=[];function s(n){const e={a:"a",code:"code",p:"p",pre:"pre",strong:"strong",...(0,r.R)(),...n.components};return(0,a.jsxs)(a.Fragment,{children:[(0,a.jsxs)(e.p,{children:[(0,a.jsx)(e.a,{href:"/docs/next/reference/",children:"Home"})," > ",(0,a.jsx)(e.a,{href:"/docs/next/reference/canon",children:(0,a.jsx)(e.code,{children:"@backstage/canon"})})," > ",(0,a.jsx)(e.a,{href:"/docs/next/reference/canon.componentdefinitions",children:(0,a.jsx)(e.code,{children:"componentDefinitions"})})]}),"\n",(0,a.jsx)(e.p,{children:"Component definitions for the Canon library"}),"\n",(0,a.jsx)(e.p,{children:(0,a.jsx)(e.strong,{children:"Signature:"})}),"\n",(0,a.jsx)(e.pre,{children:(0,a.jsx)(e.code,{className:"language-typescript",children:'componentDefinitions: {\n    readonly Avatar: {\n        readonly classNames: {\n            readonly root: "canon-AvatarRoot";\n            readonly image: "canon-AvatarImage";\n            readonly fallback: "canon-AvatarFallback";\n        };\n        readonly dataAttributes: {\n            readonly size: readonly ["small", "medium", "large"];\n        };\n    };\n    readonly Box: {\n        readonly classNames: {\n            readonly root: "canon-Box";\n        };\n    };\n    readonly Button: {\n        readonly classNames: {\n            readonly root: "canon-Button";\n        };\n        readonly dataAttributes: {\n            readonly size: readonly ["small", "medium", "large"];\n            readonly variant: readonly ["primary", "secondary", "ghost"];\n        };\n    };\n    readonly ButtonIcon: {\n        readonly classNames: {\n            readonly root: "canon-ButtonIcon";\n        };\n    };\n    readonly ButtonLink: {\n        readonly classNames: {\n            readonly root: "canon-ButtonLink";\n        };\n    };\n    readonly Checkbox: {\n        readonly classNames: {\n            readonly root: "canon-CheckboxRoot";\n            readonly label: "canon-CheckboxLabel";\n            readonly indicator: "canon-CheckboxIndicator";\n        };\n        readonly dataAttributes: {\n            readonly checked: readonly [true, false];\n        };\n    };\n    readonly Collapsible: {\n        readonly classNames: {\n            readonly root: "canon-CollapsibleRoot";\n            readonly trigger: "canon-CollapsibleTrigger";\n            readonly panel: "canon-CollapsiblePanel";\n        };\n    };\n    readonly Container: {\n        readonly classNames: {\n            readonly root: "canon-Container";\n        };\n    };\n    readonly FieldLabel: {\n        readonly classNames: {\n            readonly root: "canon-FieldLabelWrapper";\n            readonly label: "canon-FieldLabel";\n            readonly secondaryLabel: "canon-FieldSecondaryLabel";\n            readonly description: "canon-FieldDescription";\n        };\n    };\n    readonly Flex: {\n        readonly classNames: {\n            readonly root: "canon-Flex";\n        };\n    };\n    readonly Grid: {\n        readonly classNames: {\n            readonly root: "canon-Grid";\n            readonly item: "canon-GridItem";\n        };\n    };\n    readonly Heading: {\n        readonly classNames: {\n            readonly root: "canon-Heading";\n        };\n        readonly dataAttributes: {\n            readonly variant: readonly ["title1", "title2", "title3", "subtitle"];\n            readonly color: readonly ["primary", "secondary", "muted"];\n            readonly truncate: readonly [true, false];\n        };\n    };\n    readonly Icon: {\n        readonly classNames: {\n            readonly root: "canon-Icon";\n        };\n    };\n    readonly Link: {\n        readonly classNames: {\n            readonly root: "canon-Link";\n        };\n        readonly dataAttributes: {\n            readonly variant: readonly ["subtitle", "body", "caption", "label"];\n            readonly weight: readonly ["regular", "bold"];\n        };\n    };\n    readonly Menu: {\n        readonly classNames: {\n            readonly trigger: "canon-MenuTrigger";\n            readonly backdrop: "canon-MenuBackdrop";\n            readonly positioner: "canon-MenuPositioner";\n            readonly popup: "canon-MenuPopup";\n            readonly arrow: "canon-MenuArrow";\n            readonly item: "canon-MenuItem";\n            readonly group: "canon-MenuGroup";\n            readonly groupLabel: "canon-MenuGroupLabel";\n            readonly radioGroup: "canon-MenuRadioGroup";\n            readonly radioItem: "canon-MenuRadioItem";\n            readonly radioItemIndicator: "canon-MenuRadioItemIndicator";\n            readonly checkboxItem: "canon-MenuCheckboxItem";\n            readonly checkboxItemIndicator: "canon-MenuCheckboxItemIndicator";\n            readonly submenuTrigger: "canon-MenuSubmenuTrigger";\n            readonly separator: "canon-MenuSeparator";\n        };\n    };\n    readonly RadioGroup: {\n        readonly classNames: {\n            readonly root: "canon-RadioGroup";\n            readonly content: "canon-RadioGroupContent";\n            readonly radio: "canon-Radio";\n        };\n    };\n    readonly ScrollArea: {\n        readonly classNames: {\n            readonly root: "canon-ScrollAreaRoot";\n            readonly viewport: "canon-ScrollAreaViewport";\n            readonly scrollbar: "canon-ScrollAreaScrollbar";\n            readonly thumb: "canon-ScrollAreaThumb";\n        };\n    };\n    readonly SearchField: {\n        readonly classNames: {\n            readonly root: "canon-SearchField";\n            readonly clear: "canon-InputClear";\n        };\n    };\n    readonly Select: {\n        readonly classNames: {\n            readonly root: "canon-Select";\n            readonly required: "canon-SelectRequired";\n            readonly trigger: "canon-SelectTrigger";\n            readonly value: "canon-SelectValue";\n            readonly icon: "canon-SelectIcon";\n            readonly popup: "canon-SelectPopup";\n            readonly item: "canon-SelectItem";\n            readonly itemIndicator: "canon-SelectItemIndicator";\n            readonly itemText: "canon-SelectItemText";\n            readonly description: "canon-SelectDescription";\n            readonly error: "canon-SelectError";\n        };\n        readonly dataAttributes: {\n            readonly size: readonly ["small", "medium"];\n        };\n    };\n    readonly Switch: {\n        readonly classNames: {\n            readonly root: "canon-Switch";\n            readonly indicator: "canon-SwitchIndicator";\n        };\n    };\n    readonly Table: {\n        readonly classNames: {\n            readonly root: "canon-TableRoot";\n            readonly header: "canon-TableHeader";\n            readonly body: "canon-TableBody";\n            readonly row: "canon-TableRow";\n            readonly head: "canon-TableHead";\n            readonly caption: "canon-TableCaption";\n            readonly cell: "canon-TableCell";\n            readonly cellText: "canon-TableCellText";\n            readonly cellLink: "canon-TableCellLink";\n            readonly cellProfile: "canon-TableCellProfile";\n            readonly cellProfileAvatar: "canon-TableCellProfileAvatar";\n            readonly cellProfileAvatarImage: "canon-TableCellProfileAvatarImage";\n            readonly cellProfileAvatarFallback: "canon-TableCellProfileAvatarFallback";\n            readonly cellProfileName: "canon-TableCellProfileName";\n            readonly cellProfileLink: "canon-TableCellProfileLink";\n        };\n    };\n    readonly Tabs: {\n        readonly classNames: {\n            readonly root: "canon-TabsRoot";\n            readonly list: "canon-TabsList";\n            readonly indicator: "canon-TabsIndicator";\n            readonly tab: "canon-TabsTab";\n            readonly panel: "canon-TabsPanel";\n        };\n    };\n    readonly Text: {\n        readonly classNames: {\n            readonly root: "canon-Text";\n        };\n        readonly dataAttributes: {\n            readonly variant: readonly ["subtitle", "body", "caption", "label"];\n            readonly weight: readonly ["regular", "bold"];\n            readonly color: readonly ["primary", "secondary", "danger", "warning", "success"];\n            readonly truncate: readonly [true, false];\n        };\n    };\n    readonly TextField: {\n        readonly classNames: {\n            readonly root: "canon-TextField";\n            readonly inputWrapper: "canon-InputWrapper";\n            readonly input: "canon-Input";\n            readonly inputIcon: "canon-InputIcon";\n        };\n        readonly dataAttributes: {\n            readonly invalid: readonly [true, false];\n            readonly disabled: readonly [true, false];\n        };\n    };\n    readonly Header: {\n        readonly classNames: {\n            readonly toolbar: "canon-HeaderToolbar";\n            readonly toolbarWrapper: "canon-HeaderToolbarWrapper";\n            readonly toolbarContent: "canon-HeaderToolbarContent";\n            readonly toolbarControls: "canon-HeaderToolbarControls";\n            readonly toolbarIcon: "canon-HeaderToolbarIcon";\n            readonly toolbarName: "canon-HeaderToolbarName";\n            readonly breadcrumbs: "canon-HeaderBreadcrumbs";\n            readonly breadcrumb: "canon-HeaderBreadcrumb";\n            readonly breadcrumbLink: "canon-HeaderBreadcrumbLink";\n            readonly breadcrumbSeparator: "canon-HeaderBreadcrumbSeparator";\n            readonly tabs: "canon-HeaderTabs";\n            readonly tabList: "canon-HeaderTabList";\n            readonly tab: "canon-HeaderTab";\n            readonly tabActive: "canon-HeaderTabActive";\n            readonly tabHovered: "canon-HeaderTabHovered";\n            readonly subNav: "canon-HeaderSubNav";\n        };\n    };\n    readonly Tooltip: {\n        readonly classNames: {\n            readonly tooltip: "canon-Tooltip";\n            readonly arrow: "canon-TooltipArrow";\n        };\n    };\n}\n'})})]})}function y(n={}){const{wrapper:e}={...(0,r.R)(),...n.components};return e?(0,a.jsx)(e,{...n,children:(0,a.jsx)(s,{...n})}):s(n)}},221020:(n,e,o)=>{var a=o(296540),r=Symbol.for("react.element"),l=Symbol.for("react.fragment"),t=Object.prototype.hasOwnProperty,d=a.__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED.ReactCurrentOwner,c={key:!0,ref:!0,__self:!0,__source:!0};function i(n,e,o){var a,l={},i=null,s=null;for(a in void 0!==o&&(i=""+o),void 0!==e.key&&(i=""+e.key),void 0!==e.ref&&(s=e.ref),e)t.call(e,a)&&!c.hasOwnProperty(a)&&(l[a]=e[a]);if(n&&n.defaultProps)for(a in e=n.defaultProps)void 0===l[a]&&(l[a]=e[a]);return{$$typeof:r,type:n,key:i,ref:s,props:l,_owner:d.current}}e.Fragment=l,e.jsx=i,e.jsxs=i},474848:(n,e,o)=>{n.exports=o(221020)},28453:(n,e,o)=>{o.d(e,{R:()=>t,x:()=>d});var a=o(296540);const r={},l=a.createContext(r);function t(n){const e=a.useContext(l);return a.useMemo((function(){return"function"==typeof n?n(e):{...e,...n}}),[e,n])}function d(n){let e;return e=n.disableParentContext?"function"==typeof n.components?n.components(r):n.components||r:t(n.components),a.createElement(l.Provider,{value:e},n.children)}}}]);