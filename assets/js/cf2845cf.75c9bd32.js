/*! For license information please see cf2845cf.75c9bd32.js.LICENSE.txt */
"use strict";(self.webpackChunkbackstage_microsite=self.webpackChunkbackstage_microsite||[]).push([[803208],{45081:(e,t,a)=>{a.r(t),a.d(t,{assets:()=>l,contentTitle:()=>i,default:()=>u,frontMatter:()=>n,metadata:()=>s,toc:()=>c});var o=a(474848),r=a(28453);const n={title:"Migrating legacy services to a modern developer portal: A technical guide to Backstage integration",author:"Damola Obaleke",authorURL:"https://github.com/damolaobaleke",authorImageURL:"https://avatars.githubusercontent.com/u/45045727?v=4"},i=void 0,s={permalink:"/blog/2025/08/08/migrating-legacy-services-to-a-modern-developer-portal",source:"@site/blog/2025-08-08-migrating-legacy-services-to-a-modern-developer-portal.mdx",title:"Migrating legacy services to a modern developer portal: A technical guide to Backstage integration",description:"TL;DR: As part of our efforts to streamline service management and improve developer experience, our engineering org migrated from a legacy service catalogue to the Backstage Software Catalog. In this post, I'll share what we learned from that journey --- including how to build an automated script to migrate services from an existing internal service catalogue to a modern internal developer portal (IDP) like Backstage. I'll also outline strategies to help drive adoption across your organization, along with tips for addressing both the cultural and technical roadblocks you might encounter along the way.",date:"2025-08-08T00:00:00.000Z",tags:[],readingTime:11.445,hasTruncateMarker:!0,authors:[{name:"Damola Obaleke",url:"https://github.com/damolaobaleke",imageURL:"https://avatars.githubusercontent.com/u/45045727?v=4",key:null,page:null}],frontMatter:{title:"Migrating legacy services to a modern developer portal: A technical guide to Backstage integration",author:"Damola Obaleke",authorURL:"https://github.com/damolaobaleke",authorImageURL:"https://avatars.githubusercontent.com/u/45045727?v=4"},unlisted:!1,nextItem:{title:"From Zero to Maintainer: My Open Source Journey with Backstage",permalink:"/blog/2025/05/12/from-zero-to-maintainer-my-opensource-journey-with-backstage"}},l={authorsImageUrls:[void 0]},c=[];function g(e){const t={img:"img",p:"p",strong:"strong",...(0,r.R)(),...e.components};return(0,o.jsxs)(o.Fragment,{children:[(0,o.jsxs)(t.p,{children:[(0,o.jsx)(t.strong,{children:"TL;DR:"})," As part of our efforts to streamline service management and improve developer experience, our engineering org migrated from a legacy service catalogue to the Backstage Software Catalog. In this post, I'll share what we learned from that journey --- including how to build an automated script to migrate services from an existing internal service catalogue to a modern internal developer portal (IDP) like Backstage. I'll also outline strategies to help drive adoption across your organization, along with tips for addressing both the cultural and technical roadblocks you might encounter along the way."]}),"\n",(0,o.jsx)(t.p,{children:(0,o.jsx)(t.img,{alt:"migration flowchart",src:a(181273).A+"",width:"2260",height:"1769"})})]})}function u(e={}){const{wrapper:t}={...(0,r.R)(),...e.components};return t?(0,o.jsx)(t,{...e,children:(0,o.jsx)(g,{...e})}):g(e)}},221020:(e,t,a)=>{var o=a(296540),r=Symbol.for("react.element"),n=Symbol.for("react.fragment"),i=Object.prototype.hasOwnProperty,s=o.__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED.ReactCurrentOwner,l={key:!0,ref:!0,__self:!0,__source:!0};function c(e,t,a){var o,n={},c=null,g=null;for(o in void 0!==a&&(c=""+a),void 0!==t.key&&(c=""+t.key),void 0!==t.ref&&(g=t.ref),t)i.call(t,o)&&!l.hasOwnProperty(o)&&(n[o]=t[o]);if(e&&e.defaultProps)for(o in t=e.defaultProps)void 0===n[o]&&(n[o]=t[o]);return{$$typeof:r,type:e,key:c,ref:g,props:n,_owner:s.current}}t.Fragment=n,t.jsx=c,t.jsxs=c},474848:(e,t,a)=>{e.exports=a(221020)},181273:(e,t,a)=>{a.d(t,{A:()=>o});const o=a.p+"assets/images/image01-bfb388d23495f470552e6b94bf3250ef.png"},28453:(e,t,a)=>{a.d(t,{R:()=>i,x:()=>s});var o=a(296540);const r={},n=o.createContext(r);function i(e){const t=o.useContext(n);return o.useMemo((function(){return"function"==typeof e?e(t):{...t,...e}}),[t,e])}function s(e){let t;return t=e.disableParentContext?"function"==typeof e.components?e.components(r):e.components||r:i(e.components),o.createElement(n.Provider,{value:t},e.children)}}}]);