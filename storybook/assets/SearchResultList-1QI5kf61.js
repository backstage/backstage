import{j as e}from"./jsx-runtime-CvpxdxdE.js";import{u as d,S as p}from"./SearchResult-DNncS8i-.js";import{s as h}from"./translation-rjzQc8tL.js";import{H as R}from"./DefaultResultListItem-BXH89HdC.js";import{L as f}from"./List-q1Ps7jPn.js";import{A as S}from"./useAnalytics-BqSe3k6a.js";import{u as y}from"./useTranslationRef-m705PC51.js";import{E as g}from"./EmptyState-CZ1fGla9.js";import{P as x}from"./Progress-BxADJwWm.js";import{R as L}from"./ResponseErrorPanel-BWpwzcuy.js";const c=s=>{const{t:a}=y(h),{error:n,loading:o,resultItems:t,renderResultItem:i=m=>e.jsx(R,{result:m.document},m.document.location),disableRenderingWithNoResults:l,noResultsComponent:u=l?null:e.jsx(g,{missing:"data",title:a("noResultsDescription")}),...r}=s;return o?e.jsx(x,{}):n?e.jsx(L,{title:"Error encountered while fetching search results",error:n}):t!=null&&t.length?e.jsx(f,{...r,children:t.map(i)}):e.jsx(e.Fragment,{children:u})},w=s=>{const{query:a,renderResultItem:n,children:o,...t}=s,i=d(o);return e.jsx(S,{attributes:{pluginId:"search",extension:"SearchResultList"},children:e.jsx(p,{query:a,children:({loading:l,error:u,value:r})=>e.jsx(c,{...t,error:u,loading:l,resultItems:r==null?void 0:r.results,renderResultItem:n??i})})})};c.__docgenInfo={description:`Default layout for rendering search results in a list.
@param props - See {@link SearchResultListLayoutProps}.
@public`,methods:[],displayName:"SearchResultListLayout",props:{error:{required:!1,tsType:{name:"Error"},description:"If defined, will render a default error panel."},loading:{required:!1,tsType:{name:"boolean"},description:"If defined, will render a default loading progress."},resultItems:{required:!1,tsType:{name:"Array",elements:[{name:"Result",elements:[{name:"SearchDocument"}],raw:"Result<SearchDocument>"}],raw:"SearchResult[]"},description:"Search results to be rendered as a list."},renderResultItem:{required:!1,tsType:{name:"signature",type:"function",raw:`(
  value: SearchResult,
  index: number,
  array: SearchResult[],
) => JSX.Element | null`,signature:{arguments:[{type:{name:"Result",elements:[{name:"SearchDocument"}],raw:"Result<SearchDocument>"},name:"value"},{type:{name:"number"},name:"index"},{type:{name:"Array",elements:[{name:"Result",elements:[{name:"SearchDocument"}],raw:"Result<SearchDocument>"}],raw:"SearchResult[]"},name:"array"}],return:{name:"union",raw:"JSX.Element | null",elements:[{name:"JSX.Element"},{name:"null"}]}}},description:"Function to customize how result items are rendered."},noResultsComponent:{required:!1,tsType:{name:"ReactNode"},description:"Optional component to render when no results. Default to <EmptyState /> component."},disableRenderingWithNoResults:{required:!1,tsType:{name:"boolean"},description:"Optional property to provide if component should not render the component when no results are found."}}};w.__docgenInfo={description:`Given a query, search for results and render them as a list.
@param props - See {@link SearchResultListProps}.
@public`,methods:[],displayName:"SearchResultList"};export{w as S,c as a};
