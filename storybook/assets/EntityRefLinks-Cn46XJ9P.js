import{j as t}from"./jsx-runtime-hv06LKfz.js";import{r as p}from"./index-D8-PC79C.js";import{E as d}from"./EntityRefLink-DQjUDosw.js";import{s as f}from"./ref-C0VTUPuL.js";function c(i){const{entityRefs:s,hideIcons:r,...o}=i;return t.jsx(t.Fragment,{children:s.map((e,n)=>{const a=typeof e=="string"?e:f(e);return t.jsxs(p.Fragment,{children:[n>0&&", ",t.jsx(d,{...o,entityRef:e,hideIcon:r})]},`${n}.${a}`)})})}c.__docgenInfo={description:`Shows a list of clickable links to entities.

@public`,methods:[],displayName:"EntityRefLinks",props:{defaultKind:{required:!1,tsType:{name:"string"},description:""},entityRefs:{required:!0,tsType:{name:"Array",elements:[{name:"TRef"}],raw:"TRef[]"},description:""},hideIcons:{required:!1,tsType:{name:"boolean"},description:""},fetchEntities:{required:!1,tsType:{name:"boolean"},description:"@deprecated This option is no longer used; presentation is handled by entityPresentationApiRef instead"}}};export{c as E};
