import{j as p}from"./jsx-runtime-CvpxdxdE.js";import{E as m}from"./EntityRefLinks-Cvzp5-J2.js";import{e as s}from"./routes-DzXEIW7f.js";import{w as n}from"./appWrappers-BYLPiXE_.js";import"./index-DSHF18-l.js";import"./EntityRefLink-Dt1__uEo.js";import"./useRouteRef-clHAB9KK.js";import"./index-CEhUYg2U.js";import"./ApiRef-DDVPwL0h.js";import"./EntityDisplayName-BaNz3l48.js";import"./makeStyles-BpM_75FT.js";import"./defaultTheme-BC4DFfCk.js";import"./Box-Cw3NqR-I.js";import"./typography-CebPpObz.js";import"./hoist-non-react-statics.cjs-DlMN-SZi.js";import"./Tooltip-k9rQqLX7.js";import"./index-DBvFAGNd.js";import"./capitalize-90DKmOiu.js";import"./withStyles-eF3Zax-M.js";import"./useIsFocusVisible-Sgmp0f7s.js";import"./unstable_useId-BAMTp7ON.js";import"./useControlled-i6Pam0ca.js";import"./useTheme-D_a2aLgU.js";import"./Popper-BU497lOo.js";import"./createChainedFunction-Da-WpsAN.js";import"./Portal-Dl07bpo2.js";import"./Grow-DbwKXL8U.js";import"./utils-DlGjxGZ7.js";import"./TransitionGroupContext-BUwkeBv7.js";import"./ref-8pKZtiZi.js";import"./Link-OzsOgaVP.js";import"./index-jB8bSz_h.js";import"./lodash-D8aMxhkM.js";import"./interopRequireDefault-Y9pwbXtE.js";import"./createSvgIcon-CgciPynk.js";import"./createSvgIcon-D_YgPIMQ.js";import"./debounce-DtXjJkxj.js";import"./isMuiElement-fiJl_Gvd.js";import"./ownerWindow-BCxlYCSn.js";import"./Typography-D-X-TuAe.js";import"./useAnalytics-BqSe3k6a.js";import"./ConfigApi-1QFqvuIK.js";import"./MockTranslationApi-DLg7_LDd.js";import"./classCallCheck-BNzALLS0.js";import"./inherits-DbYTv_dM.js";import"./toArray-C3T4S0CF.js";import"./index-D9gx4uDp.js";import"./TranslationApi-NYdUF01F.js";import"./WebStorage-BMQO-dXK.js";import"./useAsync-W0CErRou.js";import"./useMountedState-BK0Y35lN.js";import"./componentData-CNQluCuE.js";import"./isSymbol-3Rk0qEEz.js";import"./isObject-CphdALKJ.js";import"./toString-YC_K2EVl.js";import"./ApiProvider-B3DrBnW0.js";import"./index-B0bGgVUV.js";import"./ThemeProvider-CUusItL1.js";import"./CssBaseline-ruc3I6lf.js";import"./palettes-Bwgvserk.js";const a={entityRefs:["component:default/playback","user:default/fname.lname"]},Rt={title:"Catalog /EntityRefLinks",decorators:[r=>n(p.jsx(r,{}),{mountedRoutes:{"/catalog/:namespace/:kind/:name":s}})]},t=r=>p.jsx(m,{...r});t.args=a;t.__docgenInfo={description:"",methods:[],displayName:"Default",props:{defaultKind:{required:!1,tsType:{name:"string"},description:""},entityRefs:{required:!0,tsType:{name:"Array",elements:[{name:"TRef"}],raw:"TRef[]"},description:""},hideIcons:{required:!1,tsType:{name:"boolean"},description:""},fetchEntities:{required:!1,tsType:{name:"boolean"},description:"@deprecated This option is no longer used; presentation is handled by entityPresentationApiRef instead"}}};var o,i,e;t.parameters={...t.parameters,docs:{...(o=t.parameters)==null?void 0:o.docs,source:{originalSource:"(args: EntityRefLinksProps<string | CompoundEntityRef>) => <EntityRefLinks {...args} />",...(e=(i=t.parameters)==null?void 0:i.docs)==null?void 0:e.source}}};const gt=["Default"];export{t as Default,gt as __namedExportsOrder,Rt as default};
