import{j as r}from"./jsx-runtime-hv06LKfz.js";import{r as h}from"./index-D8-PC79C.js";import{u as k,s as d,W as w,M as B}from"./MockErrorApi-xz33VbEd.js";import{c}from"./index-DlxYA1zJ.js";import{C as S}from"./Close-Rhx9yaiC.js";import{m as j}from"./makeStyles-CJp8qHqH.js";import{S as _,a as q}from"./Snackbar-BUp93KRY.js";import{I as A}from"./IconButton-tgA3biVt.js";import{u as P}from"./ApiRef-ByCJBjX1.js";import{T as D}from"./Typography-NhBf-tfS.js";import{L as C}from"./Link-m8k68nLc.js";import{T as u}from"./TestApiProvider-DCQwDAHh.js";import"./index-DtdSELz7.js";import"./typeof-ZI2KZN5z.js";import"./createSvgIcon-Bpme_iea.js";import"./capitalize-fS9uM6tv.js";import"./defaultTheme-NkpNA350.js";import"./withStyles-BsQ9H3bp.js";import"./hoist-non-react-statics.cjs-DtcWCWp5.js";import"./createChainedFunction-Da-WpsAN.js";import"./createSvgIcon-D-gz-Nq7.js";import"./debounce-DtXjJkxj.js";import"./isMuiElement-DKhW5xVU.js";import"./ownerWindow-CjzjL4wv.js";import"./useIsFocusVisible-BFy7UoKA.js";import"./index-DXvUqTe6.js";import"./index-BITTEREo.js";import"./useControlled-CliGfT3L.js";import"./unstable_useId-DQJte0g1.js";import"./Grow-BOepmPk1.js";import"./useTheme-Dk0AiudM.js";import"./utils-DMni-BWz.js";import"./TransitionGroupContext-CcnbR2YJ.js";import"./Paper-BiLxp0Cg.js";import"./ButtonBase-DXo3xcpP.js";import"./lodash-D1GzKnrP.js";import"./index-B7KODvs-.js";import"./useApp-BOX1l_wP.js";import"./useAnalytics-Q-nz63z2.js";import"./ConfigApi-ij0WO1-Y.js";import"./ApiProvider-CYh4HGR1.js";import"./index-BKN9BsH4.js";const I=j(e=>({root:{padding:e.spacing(0),marginBottom:e.spacing(0),marginTop:e.spacing(0),display:"flex",flexFlow:"row nowrap"},topPosition:{position:"relative",marginBottom:e.spacing(6),marginTop:-e.spacing(3),zIndex:"unset"},icon:{fontSize:e.typography.h6.fontSize},content:{width:"100%",maxWidth:"inherit",flexWrap:"nowrap",color:e.palette.banner.text},message:{display:"flex",alignItems:"center","& a":{color:e.palette.banner.link}},button:{color:e.palette.banner.closeButtonColor??"inherit"},info:{backgroundColor:e.palette.banner.info},error:{backgroundColor:e.palette.banner.error},warning:{backgroundColor:e.palette.banner.warning??e.palette.banner.error}}),{name:"BackstageDismissableBanner"}),o=e=>{const{variant:y,message:x,id:p,fixed:m=!1}=e,i=I(),t=P(d).forBucket("notifications"),n=k(t.observe$("dismissedBanners"),t.snapshot("dismissedBanners")),l=h.useMemo(()=>new Set(n.value??[]),[n.value]),v=n.presence==="unknown",T=()=>{t.set("dismissedBanners",[...l,p])};return r.jsx(_,{anchorOrigin:m?{vertical:"bottom",horizontal:"center"}:{vertical:"top",horizontal:"center"},open:!v&&!l.has(p),classes:{root:c(i.root,!m&&i.topPosition)},children:r.jsx(q,{classes:{root:c(i.content,i[y]),message:i.message},message:x,action:[r.jsx(A,{title:"Permanently dismiss this message",className:i.button,onClick:T,children:r.jsx(S,{className:i.icon})},"dismiss")]})})};o.__docgenInfo={description:"@public",methods:[],displayName:"DismissableBanner",props:{variant:{required:!0,tsType:{name:"union",raw:"'info' | 'error' | 'warning'",elements:[{name:"literal",value:"'info'"},{name:"literal",value:"'error'"},{name:"literal",value:"'warning'"}]},description:""},message:{required:!0,tsType:{name:"ReactNode"},description:""},id:{required:!0,tsType:{name:"string"},description:""},fixed:{required:!1,tsType:{name:"boolean"},description:""}}};const Be={title:"Feedback/DismissableBanner",component:o,argTypes:{variant:{options:["info","error","warning"],control:{type:"select"}}}},g={width:"70%"},N=()=>w.create({errorApi:new B}),f=[[d,N()]],b={message:"This is a dismissable banner",variant:"info",fixed:!1},s=e=>r.jsx("div",{style:g,children:r.jsx(u,{apis:f,children:r.jsx(o,{...e,id:"default_dismissable"})})});s.args=b;const a=e=>r.jsx("div",{style:g,children:r.jsx(u,{apis:f,children:r.jsx(o,{...e,message:r.jsxs(D,{children:["This is a dismissable banner with a link:"," ",r.jsx(C,{to:"http://example.com",color:"textPrimary",children:"example.com"})]}),id:"linked_dismissable"})})});a.args=b;s.__docgenInfo={description:"",methods:[],displayName:"Default",props:{variant:{required:!0,tsType:{name:"union",raw:"'info' | 'error' | 'warning'",elements:[{name:"literal",value:"'info'"},{name:"literal",value:"'error'"},{name:"literal",value:"'warning'"}]},description:""},message:{required:!0,tsType:{name:"ReactNode"},description:""},id:{required:!0,tsType:{name:"string"},description:""},fixed:{required:!1,tsType:{name:"boolean"},description:""}}};a.__docgenInfo={description:"",methods:[],displayName:"WithLink",props:{variant:{required:!0,tsType:{name:"union",raw:"'info' | 'error' | 'warning'",elements:[{name:"literal",value:"'info'"},{name:"literal",value:"'error'"},{name:"literal",value:"'warning'"}]},description:""},message:{required:!0,tsType:{name:"ReactNode"},description:""},id:{required:!0,tsType:{name:"string"},description:""},fixed:{required:!1,tsType:{name:"boolean"},description:""}}};s.parameters={...s.parameters,docs:{...s.parameters?.docs,source:{originalSource:`(args: Props) => <div style={containerStyle}>
    <TestApiProvider apis={apis}>
      <DismissableBanner {...args} id="default_dismissable" />
    </TestApiProvider>
  </div>`,...s.parameters?.docs?.source}}};a.parameters={...a.parameters,docs:{...a.parameters?.docs,source:{originalSource:`(args: Props) => <div style={containerStyle}>
    <TestApiProvider apis={apis}>
      <DismissableBanner {...args} message={<Typography>
            This is a dismissable banner with a link:{' '}
            <Link to="http://example.com" color="textPrimary">
              example.com
            </Link>
          </Typography>} id="linked_dismissable" />
    </TestApiProvider>
  </div>`,...a.parameters?.docs?.source}}};const Se=["Default","WithLink"];export{s as Default,a as WithLink,Se as __namedExportsOrder,Be as default};
