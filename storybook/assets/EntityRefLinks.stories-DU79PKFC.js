import{j as p}from"./jsx-runtime-CvpxdxdE.js";import{E as m}from"./EntityRefLinks-CHWiJkHh.js";import{e as s}from"./routes-CXDwG0N1.js";import{w as n}from"./appWrappers-5TT7DRH6.js";import"./index-DSHF18-l.js";import"./EntityRefLink-U0CmmufF.js";import"./useRouteRef-clHAB9KK.js";import"./index-CEhUYg2U.js";import"./ApiRef-DDVPwL0h.js";import"./EntityDisplayName-CLNuiFoO.js";import"./makeStyles-BIagdtUJ.js";import"./defaultTheme-cHLKSkOs.js";import"./Box-DLjDh1Pd.js";import"./typography-BJdsab0r.js";import"./hoist-non-react-statics.cjs-DlMN-SZi.js";import"./Tooltip-J5mjxOQ8.js";import"./index-DBvFAGNd.js";import"./capitalize-CAo0_JGt.js";import"./withStyles-CiJb2SGb.js";import"./useIsFocusVisible-Sgmp0f7s.js";import"./unstable_useId-BAMTp7ON.js";import"./useControlled-i6Pam0ca.js";import"./useTheme-ChDSp8cY.js";import"./Popper-HxwStZ9O.js";import"./createChainedFunction-Da-WpsAN.js";import"./Portal-Dl07bpo2.js";import"./Grow-BlcBT7m2.js";import"./utils-BuZ5BtGr.js";import"./TransitionGroupContext-BUwkeBv7.js";import"./ref-8pKZtiZi.js";import"./Link-DO9CKV3x.js";import"./index-jB8bSz_h.js";import"./lodash-D8aMxhkM.js";import"./typeof-jYoadTod.js";import"./createSvgIcon-5qk-fEpi.js";import"./createSvgIcon-QzyO_PdA.js";import"./debounce-DtXjJkxj.js";import"./isMuiElement-fiJl_Gvd.js";import"./ownerWindow-BCxlYCSn.js";import"./Typography-Bm-N-dvv.js";import"./useAnalytics-BqSe3k6a.js";import"./ConfigApi-1QFqvuIK.js";import"./MockTranslationApi-cbWuR4s7.js";import"./classCallCheck-MFKM5G8b.js";import"./getPrototypeOf-BC5qbMm5.js";import"./toArray-Z9EVrkEY.js";import"./index-D9gx4uDp.js";import"./TranslationApi-NYdUF01F.js";import"./WebStorage-BMQO-dXK.js";import"./useAsync-W0CErRou.js";import"./useMountedState-BK0Y35lN.js";import"./componentData-CNQluCuE.js";import"./isSymbol-3Rk0qEEz.js";import"./isObject-CphdALKJ.js";import"./toString-YC_K2EVl.js";import"./ApiProvider-B3DrBnW0.js";import"./index-B0bGgVUV.js";import"./ThemeProvider-CSMSw7n3.js";import"./CssBaseline-DO1DJQZJ.js";import"./palettes-Bwgvserk.js";const a={entityRefs:["component:default/playback","user:default/fname.lname"]},Rt={title:"Catalog /EntityRefLinks",decorators:[r=>n(p.jsx(r,{}),{mountedRoutes:{"/catalog/:namespace/:kind/:name":s}})]},t=r=>p.jsx(m,{...r});t.args=a;t.__docgenInfo={description:"",methods:[],displayName:"Default",props:{defaultKind:{required:!1,tsType:{name:"string"},description:""},entityRefs:{required:!0,tsType:{name:"Array",elements:[{name:"TRef"}],raw:"TRef[]"},description:""},hideIcons:{required:!1,tsType:{name:"boolean"},description:""},fetchEntities:{required:!1,tsType:{name:"boolean"},description:"@deprecated This option is no longer used; presentation is handled by entityPresentationApiRef instead"}}};var o,i,e;t.parameters={...t.parameters,docs:{...(o=t.parameters)==null?void 0:o.docs,source:{originalSource:"(args: EntityRefLinksProps<string | CompoundEntityRef>) => <EntityRefLinks {...args} />",...(e=(i=t.parameters)==null?void 0:i.docs)==null?void 0:e.source}}};const gt=["Default"];export{t as Default,gt as __namedExportsOrder,Rt as default};
