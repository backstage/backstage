import{j as r}from"./jsx-runtime-hv06LKfz.js";import{s as v,M as _}from"./api-YILTVPsk.js";import{r as d}from"./index-D8-PC79C.js";import{s as N}from"./translation-BIsYolyo.js";import{u as R,S as j}from"./SearchContext-DiK7zrkk.js";import{T as k}from"./TablePagination-KoqwURUs.js";import{u as q}from"./useTranslationRef-DKy5gnX5.js";import{S as b}from"./Grid-8Ap4jsYG.js";import{T as $}from"./TestApiProvider-DCQwDAHh.js";import"./ApiRef-ByCJBjX1.js";import"./TranslationApi-CV0OlCW4.js";import"./lodash-D1GzKnrP.js";import"./useAsync-7M-9CJJS.js";import"./useMountedState-YD35FCBK.js";import"./ConfigApi-ij0WO1-Y.js";import"./useAnalytics-Q-nz63z2.js";import"./defaultTheme-NkpNA350.js";import"./capitalize-fS9uM6tv.js";import"./withStyles-BsQ9H3bp.js";import"./hoist-non-react-statics.cjs-DtcWCWp5.js";import"./KeyboardArrowRight-DSUp4RBh.js";import"./createSvgIcon-D-gz-Nq7.js";import"./useTheme-Dk0AiudM.js";import"./IconButton-tgA3biVt.js";import"./ButtonBase-DXo3xcpP.js";import"./index-DXvUqTe6.js";import"./index-BITTEREo.js";import"./useIsFocusVisible-BFy7UoKA.js";import"./ownerWindow-CjzjL4wv.js";import"./TransitionGroupContext-CcnbR2YJ.js";import"./unstable_useId-DQJte0g1.js";import"./MenuItem-BeuliaIE.js";import"./ListItem-CIr9U5k9.js";import"./isMuiElement-DKhW5xVU.js";import"./ListContext-Brz5ktZ2.js";import"./TableCell-DCuSviKp.js";import"./Typography-NhBf-tfS.js";import"./Select-aGy7NPFn.js";import"./index-DnL3XN75.js";import"./Popover-CKCFsMrH.js";import"./debounce-DtXjJkxj.js";import"./createChainedFunction-Da-WpsAN.js";import"./Grow-BOepmPk1.js";import"./utils-DMni-BWz.js";import"./Modal-m69wb1rs.js";import"./classCallCheck-MFKM5G8b.js";import"./Portal-yuzZovYw.js";import"./Paper-BiLxp0Cg.js";import"./List-Bi5n8Alr.js";import"./formControlState-ByiNFc8I.js";import"./useControlled-CliGfT3L.js";import"./useFormControl-Dd17crCt.js";import"./ApiProvider-CYh4HGR1.js";import"./index-BKN9BsH4.js";const O=e=>Buffer.from(e.toString(),"utf-8").toString("base64"),I=e=>e?Number(Buffer.from(e,"base64").toString("utf-8")):0,C=e=>{const{t}=q(N),{total:o=-1,cursor:c,hasNextPage:a,onCursorChange:l,limit:h=25,limitLabel:f=t("searchPagination.limitLabel"),limitText:x=({from:g,to:i})=>o>0?t("searchPagination.limitText",{num:`${o}`}):`${g}-${i}`,limitOptions:y,onLimitChange:P,...S}=e,T=d.useMemo(()=>I(c),[c]),w=d.useCallback((g,i)=>{l?.(O(i))},[l]),L=d.useCallback(g=>{const i=g.target.value;P?.(parseInt(i,10))},[P]);return r.jsx(k,{...S,component:"div",count:o,page:T,nextIconButtonProps:{...a!==void 0&&{disabled:!a}},onPageChange:w,rowsPerPage:h,labelRowsPerPage:f,labelDisplayedRows:x,rowsPerPageOptions:y,onRowsPerPageChange:L})},n=e=>{const{pageLimit:t,setPageLimit:o,pageCursor:c,setPageCursor:a,fetchNextPage:l}=R(),h=d.useCallback(f=>{o(f),a(void 0)},[o,a]);return r.jsx(C,{...e,hasNextPage:!!l,limit:t,onLimitChange:h,cursor:c,onCursorChange:a})};C.__docgenInfo={description:`A component with controls for search results pagination.
@param props - See {@link SearchPaginationBaseProps}.
@public`,methods:[],displayName:"SearchPaginationBase",props:{className:{required:!1,tsType:{name:"string"},description:"The component class name."},total:{required:!1,tsType:{name:"number"},description:`The total number of results.
For an unknown number of items, provide -1.
Defaults to -1.`},cursor:{required:!1,tsType:{name:"string"},description:"The cursor for the current page."},hasNextPage:{required:!1,tsType:{name:"boolean"},description:"Whether a next page exists"},onCursorChange:{required:!1,tsType:{name:"signature",type:"function",raw:"(pageCursor: string) => void",signature:{arguments:[{type:{name:"string"},name:"pageCursor"}],return:{name:"void"}}},description:"Callback fired when the current page cursor is changed."},limit:{required:!1,tsType:{name:"number"},description:`The limit of results per page.
Set -1 to display all the results.`},limitLabel:{required:!1,tsType:{name:"ReactNode"},description:`Customize the results per page label.
Defaults to "Results per page:".`},limitText:{required:!1,tsType:{name:"signature",type:"function",raw:`(params: {
  from: number;
  to: number;
  page: number;
  count: number;
}) => ReactNode`,signature:{arguments:[{type:{name:"signature",type:"object",raw:`{
  from: number;
  to: number;
  page: number;
  count: number;
}`,signature:{properties:[{key:"from",value:{name:"number",required:!0}},{key:"to",value:{name:"number",required:!0}},{key:"page",value:{name:"number",required:!0}},{key:"count",value:{name:"number",required:!0}}]}},name:"params"}],return:{name:"ReactNode"}}},description:'Customize the results per page text.\nDefaults to "(\\{ from, to, count \\}) =\\> count \\> 0 ? `of $\\{count\\}` : `$\\{from\\}-$\\{to\\}`".'},limitOptions:{required:!1,tsType:{name:"Array",elements:[{name:"unknown"}],raw:"SearchPaginationLimitOption[]"},description:`Options for setting how many results show per page.
If less than two options are available, no select field will be displayed.
Use -1 for the value with a custom label to show all the results.
Defaults to [10, 25, 50, 100].`},onLimitChange:{required:!1,tsType:{name:"signature",type:"function",raw:"(value: number) => void",signature:{arguments:[{type:{name:"number"},name:"value"}],return:{name:"void"}}},description:"Callback fired when the number of results per page is changed."}}};n.__docgenInfo={description:`A component for setting the search context page limit and cursor.
@param props - See {@link SearchPaginationProps}.
@public`,methods:[],displayName:"SearchPagination"};const De={title:"Plugins/Search/SearchPagination",component:n,decorators:[e=>r.jsx($,{apis:[[v,new _]],children:r.jsx(j,{children:r.jsx(b,{container:!0,direction:"row",children:r.jsx(b,{item:!0,xs:12,children:r.jsx(e,{})})})})})]},s=()=>r.jsx(n,{}),m=()=>r.jsx(n,{limitLabel:"Rows per page:"}),p=()=>r.jsx(n,{limitText:({from:e,to:t})=>`${e}-${t} of more than ${t}`}),u=()=>r.jsx(n,{limitOptions:[5,10,20]});s.__docgenInfo={description:"",methods:[],displayName:"Default"};m.__docgenInfo={description:"",methods:[],displayName:"CustomPageLimitLabel"};p.__docgenInfo={description:"",methods:[],displayName:"CustomPageLimitText"};u.__docgenInfo={description:"",methods:[],displayName:"CustomPageLimitOptions"};s.parameters={...s.parameters,docs:{...s.parameters?.docs,source:{originalSource:`() => {
  return <SearchPagination />;
}`,...s.parameters?.docs?.source}}};m.parameters={...m.parameters,docs:{...m.parameters?.docs,source:{originalSource:`() => {
  return <SearchPagination limitLabel="Rows per page:" />;
}`,...m.parameters?.docs?.source}}};p.parameters={...p.parameters,docs:{...p.parameters?.docs,source:{originalSource:"() => {\n  return <SearchPagination limitText={({\n    from,\n    to\n  }) => `${from}-${to} of more than ${to}`} />;\n}",...p.parameters?.docs?.source}}};u.parameters={...u.parameters,docs:{...u.parameters?.docs,source:{originalSource:`() => {
  return <SearchPagination limitOptions={[5, 10, 20]} />;
}`,...u.parameters?.docs?.source}}};const Ae=["Default","CustomPageLimitLabel","CustomPageLimitText","CustomPageLimitOptions"];export{m as CustomPageLimitLabel,u as CustomPageLimitOptions,p as CustomPageLimitText,s as Default,Ae as __namedExportsOrder,De as default};
