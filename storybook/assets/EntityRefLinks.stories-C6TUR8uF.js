import{j as o}from"./jsx-runtime-hv06LKfz.js";import{E as i}from"./EntityRefLinks-_-hLZ7rZ.js";import{e}from"./routes-CvaB9SsB.js";import{w as p}from"./appWrappers-CQRuyO_1.js";import"./index-D8-PC79C.js";import"./EntityRefLink-C8wIvK2E.js";import"./useRouteRef-ZIOUJ-Yz.js";import"./index-B7KODvs-.js";import"./ApiRef-ByCJBjX1.js";import"./EntityDisplayName-BW1JULlR.js";import"./makeStyles-_0rcpTC-.js";import"./defaultTheme-HGKtGPzz.js";import"./Box-DggyAouF.js";import"./typography-CPNtfiQW.js";import"./hoist-non-react-statics.cjs-DtcWCWp5.js";import"./Tooltip-CeRVkBxz.js";import"./index-DXvUqTe6.js";import"./index-BITTEREo.js";import"./capitalize-CaJ9t4LC.js";import"./withStyles-B13qPX67.js";import"./useIsFocusVisible-BFy7UoKA.js";import"./unstable_useId-DQJte0g1.js";import"./useControlled-CliGfT3L.js";import"./useTheme-Cllnm7xZ.js";import"./Popper-DxTJbPZX.js";import"./createChainedFunction-Da-WpsAN.js";import"./Portal-yuzZovYw.js";import"./Grow-D7k_h4MK.js";import"./utils-CshA_SyI.js";import"./TransitionGroupContext-CcnbR2YJ.js";import"./get-4DMcJ6Bd.js";import"./ref-C0VTUPuL.js";import"./Link-Dz1KAoW-.js";import"./index-DlxYA1zJ.js";import"./lodash-D1GzKnrP.js";import"./typeof-ZI2KZN5z.js";import"./createSvgIcon-DoLugWkO.js";import"./createSvgIcon-CPc4HhrD.js";import"./debounce-DtXjJkxj.js";import"./isMuiElement-DKhW5xVU.js";import"./ownerWindow-CjzjL4wv.js";import"./Typography-DGbghBbX.js";import"./useApp-BOX1l_wP.js";import"./useAnalytics-Q-nz63z2.js";import"./ConfigApi-ij0WO1-Y.js";import"./UnifiedThemeProvider-DbOuET0c.js";import"./classCallCheck-MFKM5G8b.js";import"./inherits-ClCjHRuI.js";import"./toArray-CSB0RLEp.js";import"./index-DtdSELz7.js";import"./TranslationApi-CV0OlCW4.js";import"./palettes-EuACyB3O.js";import"./CssBaseline-DGAQS5oy.js";import"./ThemeProvider-s9WOYmDF.js";import"./MockErrorApi-xz33VbEd.js";import"./useAsync-7M-9CJJS.js";import"./useMountedState-YD35FCBK.js";import"./componentData-DvKcogcx.js";import"./isSymbol-DB9gu3CF.js";import"./isObject--vsEa_js.js";import"./toString-Ct-j8ZqT.js";import"./ApiProvider-CYh4HGR1.js";import"./index-BKN9BsH4.js";const m={entityRefs:["component:default/playback","user:default/fname.lname"]},Rt={title:"Catalog /EntityRefLinks",decorators:[r=>p(o.jsx(r,{}),{mountedRoutes:{"/catalog/:namespace/:kind/:name":e}})]},t=r=>o.jsx(i,{...r});t.args=m;t.__docgenInfo={description:"",methods:[],displayName:"Default",props:{defaultKind:{required:!1,tsType:{name:"string"},description:""},entityRefs:{required:!0,tsType:{name:"Array",elements:[{name:"TRef"}],raw:"TRef[]"},description:""},hideIcons:{required:!1,tsType:{name:"boolean"},description:""},fetchEntities:{required:!1,tsType:{name:"boolean"},description:"@deprecated This option is no longer used; presentation is handled by entityPresentationApiRef instead"}}};t.parameters={...t.parameters,docs:{...t.parameters?.docs,source:{originalSource:"(args: EntityRefLinksProps<string | CompoundEntityRef>) => <EntityRefLinks {...args} />",...t.parameters?.docs?.source}}};const gt=["Default"];export{t as Default,gt as __namedExportsOrder,Rt as default};
