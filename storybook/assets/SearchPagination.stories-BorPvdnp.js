import{j as r}from"./jsx-runtime-Cw0GR0a5.js";import{s as B,M as E}from"./api-B335RvSG.js";import{r as h}from"./index-CTjT7uj6.js";import{s as M}from"./translation-CE915EFO.js";import{u as z,S as F}from"./SearchContext-NUeqQOQ4.js";import{T as G}from"./TablePagination-4TADpyXu.js";import{u as U}from"./useTranslationRef-Bfx90Ud1.js";import{S as b}from"./Grid-CFE-uVXf.js";import{T as V}from"./TestApiProvider-4wn3im9M.js";import"./ApiRef-CqkoWjZn.js";import"./TranslationApi-DhmNHZQM.js";import"./lodash-CoGan1YB.js";import"./useAsync-CXA3qup_.js";import"./useMountedState-DkESzBh4.js";import"./useAnalytics-DVyBXs_0.js";import"./ConfigApi-D1qiBdfc.js";import"./defaultTheme-DquFOgf8.js";import"./capitalize-BWjKmKKm.js";import"./withStyles-DWaS6n8x.js";import"./hoist-non-react-statics.cjs-DzIEFHQI.js";import"./KeyboardArrowRight-B3QN00AX.js";import"./createSvgIcon-CL6P1I3F.js";import"./useTheme-0ztDbzjM.js";import"./IconButton-CFscYum-.js";import"./ButtonBase-BGCFQJw7.js";import"./index-DwHHXP4W.js";import"./useIsFocusVisible-BQk2_Vhe.js";import"./ownerWindow-C3iVrxHF.js";import"./TransitionGroupContext-BtzQ-Cv7.js";import"./unstable_useId-B3Hiq1YI.js";import"./MenuItem-dYg-3nZn.js";import"./ListItem-DrBaGnGs.js";import"./isMuiElement-B_4ddUuK.js";import"./ListContext-DydK1sOh.js";import"./Typography-D5Gm01bp.js";import"./Select-ChjCOIHu.js";import"./react-is.production.min-D0tnNtx9.js";import"./Popover-D307bIKx.js";import"./debounce-DtXjJkxj.js";import"./createChainedFunction-Da-WpsAN.js";import"./Modal-Bp4d7pBz.js";import"./classCallCheck-BNzALLS0.js";import"./Portal-BcgI5KAA.js";import"./Paper-2nKWzoda.js";import"./Grow-CD9ZmTub.js";import"./utils-C5QDFBiQ.js";import"./List-B21WyO9K.js";import"./formControlState-ByiNFc8I.js";import"./useControlled-B47E2WMp.js";import"./useFormControl-F4cJWIkJ.js";import"./TableCell-CBz6pbq0.js";import"./ApiProvider-DlKBPm-W.js";import"./index-BRV0Se7Z.js";const W=e=>Buffer.from(e.toString(),"utf-8").toString("base64"),H=e=>e?Number(Buffer.from(e,"base64").toString("utf-8")):0,k=e=>{const{t}=U(M),{total:o=-1,cursor:l,hasNextPage:a,onCursorChange:i,limit:f=25,limitLabel:P=t("searchPagination.limitLabel"),limitText:q=({from:d,to:s})=>o>0?t("searchPagination.limitText",{num:`${o}`}):`${d}-${s}`,limitOptions:$,onLimitChange:g,...O}=e,I=h.useMemo(()=>H(l),[l]),D=h.useCallback((d,s)=>{i==null||i(W(s))},[i]),A=h.useCallback(d=>{const s=d.target.value;g==null||g(parseInt(s,10))},[g]);return r.jsx(G,{...O,component:"div",count:o,page:I,nextIconButtonProps:{...a!==void 0&&{disabled:!a}},onPageChange:D,rowsPerPage:f,labelRowsPerPage:P,labelDisplayedRows:q,rowsPerPageOptions:$,onRowsPerPageChange:A})},n=e=>{const{pageLimit:t,setPageLimit:o,pageCursor:l,setPageCursor:a,fetchNextPage:i}=z(),f=h.useCallback(P=>{o(P),a(void 0)},[o,a]);return r.jsx(k,{...e,hasNextPage:!!i,limit:t,onLimitChange:f,cursor:l,onCursorChange:a})};k.__docgenInfo={description:`A component with controls for search results pagination.
@param props - See {@link SearchPaginationBaseProps}.
@public`,methods:[],displayName:"SearchPaginationBase",props:{className:{required:!1,tsType:{name:"string"},description:"The component class name."},total:{required:!1,tsType:{name:"number"},description:`The total number of results.
For an unknown number of items, provide -1.
Defaults to -1.`},cursor:{required:!1,tsType:{name:"string"},description:"The cursor for the current page."},hasNextPage:{required:!1,tsType:{name:"boolean"},description:"Whether a next page exists"},onCursorChange:{required:!1,tsType:{name:"signature",type:"function",raw:"(pageCursor: string) => void",signature:{arguments:[{type:{name:"string"},name:"pageCursor"}],return:{name:"void"}}},description:"Callback fired when the current page cursor is changed."},limit:{required:!1,tsType:{name:"number"},description:`The limit of results per page.
Set -1 to display all the results.`},limitLabel:{required:!1,tsType:{name:"ReactNode"},description:`Customize the results per page label.
Defaults to "Results per page:".`},limitText:{required:!1,tsType:{name:"signature",type:"function",raw:`(params: {
  from: number;
  to: number;
  page: number;
  count: number;
}) => ReactNode`,signature:{arguments:[{type:{name:"signature",type:"object",raw:`{
  from: number;
  to: number;
  page: number;
  count: number;
}`,signature:{properties:[{key:"from",value:{name:"number",required:!0}},{key:"to",value:{name:"number",required:!0}},{key:"page",value:{name:"number",required:!0}},{key:"count",value:{name:"number",required:!0}}]}},name:"params"}],return:{name:"ReactNode"}}},description:'Customize the results per page text.\nDefaults to "(\\{ from, to, count \\}) =\\> count \\> 0 ? `of $\\{count\\}` : `$\\{from\\}-$\\{to\\}`".'},limitOptions:{required:!1,tsType:{name:"Array",elements:[{name:"unknown"}],raw:"SearchPaginationLimitOption[]"},description:`Options for setting how many results show per page.
If less than two options are available, no select field will be displayed.
Use -1 for the value with a custom label to show all the results.
Defaults to [10, 25, 50, 100].`},onLimitChange:{required:!1,tsType:{name:"signature",type:"function",raw:"(value: number) => void",signature:{arguments:[{type:{name:"number"},name:"value"}],return:{name:"void"}}},description:"Callback fired when the number of results per page is changed."}}};n.__docgenInfo={description:`A component for setting the search context page limit and cursor.
@param props - See {@link SearchPaginationProps}.
@public`,methods:[],displayName:"SearchPagination"};const He={title:"Plugins/Search/SearchPagination",component:n,decorators:[e=>r.jsx(V,{apis:[[B,new E]],children:r.jsx(F,{children:r.jsx(b,{container:!0,direction:"row",children:r.jsx(b,{item:!0,xs:12,children:r.jsx(e,{})})})})})]},m=()=>r.jsx(n,{}),p=()=>r.jsx(n,{limitLabel:"Rows per page:"}),u=()=>r.jsx(n,{limitText:({from:e,to:t})=>`${e}-${t} of more than ${t}`}),c=()=>r.jsx(n,{limitOptions:[5,10,20]});m.__docgenInfo={description:"",methods:[],displayName:"Default"};p.__docgenInfo={description:"",methods:[],displayName:"CustomPageLimitLabel"};u.__docgenInfo={description:"",methods:[],displayName:"CustomPageLimitText"};c.__docgenInfo={description:"",methods:[],displayName:"CustomPageLimitOptions"};var x,C,y;m.parameters={...m.parameters,docs:{...(x=m.parameters)==null?void 0:x.docs,source:{originalSource:`() => {
  return <SearchPagination />;
}`,...(y=(C=m.parameters)==null?void 0:C.docs)==null?void 0:y.source}}};var S,T,w;p.parameters={...p.parameters,docs:{...(S=p.parameters)==null?void 0:S.docs,source:{originalSource:`() => {
  return <SearchPagination limitLabel="Rows per page:" />;
}`,...(w=(T=p.parameters)==null?void 0:T.docs)==null?void 0:w.source}}};var L,v,_;u.parameters={...u.parameters,docs:{...(L=u.parameters)==null?void 0:L.docs,source:{originalSource:"() => {\n  return <SearchPagination limitText={({\n    from,\n    to\n  }) => `${from}-${to} of more than ${to}`} />;\n}",...(_=(v=u.parameters)==null?void 0:v.docs)==null?void 0:_.source}}};var N,R,j;c.parameters={...c.parameters,docs:{...(N=c.parameters)==null?void 0:N.docs,source:{originalSource:`() => {
  return <SearchPagination limitOptions={[5, 10, 20]} />;
}`,...(j=(R=c.parameters)==null?void 0:R.docs)==null?void 0:j.source}}};const Je=["Default","CustomPageLimitLabel","CustomPageLimitText","CustomPageLimitOptions"];export{p as CustomPageLimitLabel,c as CustomPageLimitOptions,u as CustomPageLimitText,m as Default,Je as __namedExportsOrder,He as default};
