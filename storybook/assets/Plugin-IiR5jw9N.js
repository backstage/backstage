import{j as u}from"./jsx-runtime-hv06LKfz.js";import{r as m}from"./index-D8-PC79C.js";import{a as d}from"./componentData-DvKcogcx.js";import{A as x,u as g,r as E}from"./useAnalytics-Q-nz63z2.js";import{F as y}from"./ApiRef-ByCJBjX1.js";import{u as R}from"./useApp-BOX1l_wP.js";import{u as b}from"./useRouteRef-ZIOUJ-Yz.js";class f extends m.Component{static getDerivedStateFromError(e){return{error:e}}state={error:void 0};handleErrorReset=()=>{this.setState({error:void 0})};render(){const{error:e}=this.state,{app:t,plugin:r}=this.props,{ErrorBoundaryFallback:a}=t.getComponents();return e?u.jsx(a,{error:e,resetError:this.handleErrorReset,plugin:r}):this.props.children}}f.__docgenInfo={description:"",methods:[{name:"handleErrorReset",docblock:null,modifiers:[],params:[],returns:null}],displayName:"PluginErrorBoundary"};function A(n){const{component:e,mountPoint:t,name:r}=n;return h({component:{lazy:()=>e().then(a=>{const s=i=>{const c=g();try{b(t)}catch(l){if(typeof l=="object"&&l!==null){const{message:p}=l;if(typeof p=="string"&&p.startsWith("No path for "))throw new Error(`Routable extension component with mount point ${t} was not discovered in the app element tree. Routable extension components may not be rendered by other components and must be directly available as an element within the App provider component.`)}throw l}return m.useEffect(()=>{c.captureEvent(E,"")},[c]),u.jsx(a,{...i})},o=r||a.displayName||a.name||"LazyComponent";return s.displayName=`RoutableExtension(${o})`,s})},data:{"core.mountPoint":t},name:r})}function $(n){const{component:e,name:t}=n;return h({component:e,name:t})}function h(n){const{data:e={},name:t}=n;t||console.warn("Declaring extensions without name is DEPRECATED. Make sure that all usages of createReactExtension, createComponentExtension and createRoutableExtension provide a name.");let r;if("lazy"in n.component){const s=n.component.lazy;r=m.lazy(()=>s().then(o=>({default:o}),o=>{const i=t?` of the ${t} extension`:"";throw new y(`Failed lazy loading${i}, try to reload the page`,o)}))}else r=n.component.sync;const a=t||r.displayName||r.name||"Component";return{expose(s){const o=i=>{const c=R(),{Progress:l}=c.getComponents(),p=e?.["core.mountPoint"];return u.jsx(m.Suspense,{fallback:u.jsx(l,{}),children:u.jsx(f,{app:c,plugin:s,children:u.jsx(x,{attributes:{pluginId:s.getId(),...t&&{extension:t},...p&&{routeRef:p.id}},children:u.jsx(r,{...i})})})})};d(o,"core.plugin",s),d(o,"core.extensionName",t);for(const[i,c]of Object.entries(e))d(o,i,c);return o.displayName=`Extension(${a})`,o}}}class w{constructor(e){this.config=e}getId(){return this.config.id}getApis(){return this.config.apis??[]}getFeatureFlags(){return this.config.featureFlags?.slice()??[]}get routes(){return this.config.routes??{}}get externalRoutes(){return this.config.externalRoutes??{}}provide(e){return e.expose(this)}toString(){return`plugin{${this.config.id}}`}}function k(n){return new w(n)}export{h as a,$ as b,k as c,A as d};
