apiVersion: scaffolder.backstage.io/v1beta3
kind: Template
metadata:
  name: golang-template
  title: Create Gin Golang Template
  description: Create a new CRA website project
  tags:
    - golang
    - gin
    - backend
spec:
  owner: lmhinnel
  type: service

  parameters:
    - title: Provide some simple information
      required:
        - component_id
        - module
        - go_version
        - owner
      properties:
        component_id:
          title: Name
          type: string
          description: Unique name of the component
          ui:field: EntityNamePicker
          ui:autofocus: true
        module:
          title: Package name
          type: string
          description: You can specify the main or default package of your project (e.g. github.com/lmhinnel/go-go-be)
        go_version:
          title: Go Version
          type: number
          description: Version of go >= 1.21 (e.g. 1.23)
          default: 1.23
          enum: [1.21, 1.22, 1.23]
        description:
          title: Description
          type: string
          description: Help others understand what this website is for.
        owner:
          title: Owner
          type: string
          description: Owner of the component
          ui:field: OwnerPicker
          ui:options:
            allowedKinds:
              - Group
        port:
          title: Service port
          type: string
          description: Run service on ?port (e.g. :8080)
          default: :8080
    - title: Choose a location
      required:
        - repoUrl
      properties:
        repoUrl:
          title: Repository Location
          type: string
          ui:field: RepoUrlPicker
          ui:options:
            allowedHosts:
              - github.com

  steps:
    - id: template
      name: Fetch Skeleton + Template
      action: fetch:template
      input:
        url: ./skeleton
        copyWithoutRender:
          - .github/workflows/*
        values:
          component_id: ${{ parameters.component_id }}
          module: ${{ parameters.module }}
          go_version: ${{ parameters.go_version }}
          description: ${{ parameters.description }}
          owner: ${{ parameters.owner }}
          port: ${{ parameters.port }}
    - id: publish
      name: Publish
      action: publish:github
      input:
        allowedHosts: ["github.com"]
        description: This is ${{ parameters.component_id }}
        repoUrl: ${{ parameters.repoUrl }}

    - id: register
      name: Register
      action: catalog:register
      input:
        repoContentsUrl: ${{ steps.publish.output.repoContentsUrl }}
        catalogInfoPath: "/catalog-info.yaml"

  output:
    links:
      - title: Repository
        url: ${{ steps.publish.output.remoteUrl }}
      - title: Open in catalog
        icon: catalog
        entityRef: ${{ steps.register.output.entityRef }}
