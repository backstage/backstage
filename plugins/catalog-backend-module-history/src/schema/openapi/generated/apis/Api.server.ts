/*
 * Copyright 2025 The Backstage Authors
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

//

// ******************************************************************
// * THIS IS AN AUTOGENERATED FILE. DO NOT EDIT THIS FILE DIRECTLY. *
// ******************************************************************
import { GetEvents200Response } from '../models/GetEvents200Response.model';
import { GetEventsDefaultResponse } from '../models/GetEventsDefaultResponse.model';
import { ReadSubscription200Response } from '../models/ReadSubscription200Response.model';
import { SubscriptionSpec } from '../models/SubscriptionSpec.model';
import { UpsertSubscription200Response } from '../models/UpsertSubscription200Response.model';

/**
 * @public
 */
export type AckSubscription = {
  path: {
    subscriptionId: string;
    ackId: string;
  };
  response: void | GetEventsDefaultResponse | GetEventsDefaultResponse;
};
/**
 * @public
 */
export type GetEvents = {
  query: {
    cursor?: string;
    afterEventId?: string;
    entityRef?: string;
    entityId?: string;
    order?: 'asc' | 'desc';
    limit?: number;
    block?: boolean;
  };
  response:
    | GetEvents200Response
    | GetEvents200Response
    | GetEventsDefaultResponse;
};
/**
 * @public
 */
export type ReadSubscription = {
  path: {
    subscriptionId: string;
  };
  query: {
    limit?: number;
    block?: boolean;
  };
  response:
    | ReadSubscription200Response
    | void
    | GetEventsDefaultResponse
    | GetEventsDefaultResponse;
};
/**
 * @public
 */
export type UpsertSubscription = {
  body: SubscriptionSpec;
  response: UpsertSubscription200Response | GetEventsDefaultResponse;
};

export type EndpointMap = {
  '#post|/history/v1/subscriptions/{subscriptionId}/ack/{ackId}': AckSubscription;

  '#get|/history/v1/events': GetEvents;

  '#get|/history/v1/subscriptions/{subscriptionId}/read': ReadSubscription;

  '#post|/history/v1/subscriptions': UpsertSubscription;
};
