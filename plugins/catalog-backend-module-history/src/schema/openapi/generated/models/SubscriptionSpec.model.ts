/*
 * Copyright 2025 The Backstage Authors
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

// ******************************************************************
// * THIS IS AN AUTOGENERATED FILE. DO NOT EDIT THIS FILE DIRECTLY. *
// ******************************************************************

/**
 * The specification for a single subscription, used in an upsert
 * @public
 */
export interface SubscriptionSpec {
  /**
   * A unique identifier of this subscription. It is recommended that this ID only consist of URL safe characters, and it must be no more than 250 characters long. If not specified, a new subscription with a random ID will be created.
   */
  subscriptionId?: string;
  /**
   * Return events that are after (newer than) but not equal to the given event ID. Use the special value \"last\" to start reading from the very end of the events list. Use the value \"0\" if you want to start reading from the first history event ever emitted. If not specified, \"last\" is assumed. This parameter only has an effect on the actual current stream position upon initial creation; after that, only reads can move it.
   */
  afterEventId?: string;
  /**
   * Filter to only events pertaining to this entity ref
   */
  entityRef?: string;
  /**
   * Filter to only events pertaining to this entity uid
   */
  entityId?: string;
}
